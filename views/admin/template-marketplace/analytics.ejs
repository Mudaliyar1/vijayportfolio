<!-- Admin Template Marketplace Analytics -->
<div>
  <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">Template Marketplace Analytics</h1>
      <a href="/admin/template-marketplace" class="bg-dark-200 hover:bg-dark-300 text-gray-300 px-3 py-2 rounded-md text-sm transition-colors">
        <i class="fas fa-arrow-left mr-1"></i> Back to Dashboard
      </a>
    </div>

    <!-- Daily Uploads Chart -->
    <div class="bg-dark-100 rounded-lg border border-gray-800 p-6 mb-8">
      <h2 class="text-xl font-semibold mb-4">Template Uploads (Last 30 Days)</h2>
      <div class="h-80">
        <canvas id="uploadsChart"></canvas>
      </div>
    </div>

    <!-- Distribution Charts -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
      <!-- Category Distribution -->
      <div class="bg-dark-100 rounded-lg border border-gray-800 p-6">
        <h2 class="text-xl font-semibold mb-4">Category Distribution</h2>
        <div class="h-64">
          <canvas id="categoryChart"></canvas>
        </div>
      </div>

      <!-- Package Distribution -->
      <div class="bg-dark-100 rounded-lg border border-gray-800 p-6">
        <h2 class="text-xl font-semibold mb-4">Package Distribution</h2>
        <div class="h-64">
          <canvas id="packageChart"></canvas>
        </div>
      </div>

      <!-- Price Distribution -->
      <div class="bg-dark-100 rounded-lg border border-gray-800 p-6">
        <h2 class="text-xl font-semibold mb-4">Price Distribution</h2>
        <div class="h-64">
          <canvas id="priceChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Parse data from server
    const dailyUploads = <%= JSON.stringify(dailyUploads) %>;
    const categoryDistribution = <%= JSON.stringify(categoryDistribution) %>;
    const packageDistribution = <%= JSON.stringify(packageDistribution) %>;
    const priceDistribution = <%= JSON.stringify(priceDistribution) %>;

    // Daily Uploads Chart
    const uploadsCtx = document.getElementById('uploadsChart').getContext('2d');
    new Chart(uploadsCtx, {
      type: 'line',
      data: {
        labels: dailyUploads.map(item => item.date),
        datasets: [{
          label: 'Template Uploads',
          data: dailyUploads.map(item => item.count),
          backgroundColor: 'rgba(0, 242, 255, 0.2)',
          borderColor: 'rgba(0, 242, 255, 1)',
          borderWidth: 2,
          tension: 0.4,
          fill: true
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            grid: {
              color: 'rgba(255, 255, 255, 0.1)'
            },
            ticks: {
              color: 'rgba(255, 255, 255, 0.7)'
            }
          },
          x: {
            grid: {
              color: 'rgba(255, 255, 255, 0.1)'
            },
            ticks: {
              color: 'rgba(255, 255, 255, 0.7)'
            }
          }
        },
        plugins: {
          legend: {
            labels: {
              color: 'rgba(255, 255, 255, 0.7)'
            }
          }
        }
      }
    });

    // Category Distribution Chart
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    new Chart(categoryCtx, {
      type: 'doughnut',
      data: {
        labels: categoryDistribution.map(item => item._id),
        datasets: [{
          data: categoryDistribution.map(item => item.count),
          backgroundColor: [
            'rgba(0, 242, 255, 0.7)',
            'rgba(138, 43, 226, 0.7)',
            'rgba(50, 205, 50, 0.7)',
            'rgba(255, 165, 0, 0.7)',
            'rgba(255, 99, 132, 0.7)',
            'rgba(54, 162, 235, 0.7)',
            'rgba(255, 206, 86, 0.7)',
            'rgba(75, 192, 192, 0.7)',
            'rgba(153, 102, 255, 0.7)',
            'rgba(255, 159, 64, 0.7)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'right',
            labels: {
              color: 'rgba(255, 255, 255, 0.7)',
              font: {
                size: 10
              }
            }
          }
        }
      }
    });

    // Package Distribution Chart
    const packageCtx = document.getElementById('packageChart').getContext('2d');
    new Chart(packageCtx, {
      type: 'doughnut',
      data: {
        labels: packageDistribution.map(item => item._id),
        datasets: [{
          data: packageDistribution.map(item => item.count),
          backgroundColor: [
            'rgba(0, 242, 255, 0.7)',
            'rgba(138, 43, 226, 0.7)',
            'rgba(50, 205, 50, 0.7)',
            'rgba(255, 165, 0, 0.7)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'right',
            labels: {
              color: 'rgba(255, 255, 255, 0.7)',
              font: {
                size: 10
              }
            }
          }
        }
      }
    });

    // Price Distribution Chart
    const priceCtx = document.getElementById('priceChart').getContext('2d');
    new Chart(priceCtx, {
      type: 'doughnut',
      data: {
        labels: priceDistribution.map(item => item._id),
        datasets: [{
          data: priceDistribution.map(item => item.count),
          backgroundColor: [
            'rgba(50, 205, 50, 0.7)',
            'rgba(0, 242, 255, 0.7)',
            'rgba(138, 43, 226, 0.7)',
            'rgba(255, 99, 132, 0.7)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'right',
            labels: {
              color: 'rgba(255, 255, 255, 0.7)',
              font: {
                size: 10
              }
            }
          }
        }
      }
    });
  });
</script>
