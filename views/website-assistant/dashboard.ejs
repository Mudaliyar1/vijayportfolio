<!-- Website Customization Assistant Dashboard -->
<div class="container mx-auto px-4 py-8">
  <div class="flex flex-col md:flex-row justify-between items-start mb-8">
    <div>
      <h1 class="text-3xl font-bold text-white mb-2">Website Customization Assistant</h1>
      <p class="text-gray-400">Get AI-powered advice to improve your website</p>
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- Left Column: Website Selection -->
    <div class="lg:col-span-1">
      <div class="bg-dark-200 rounded-lg p-6 mb-6">
        <h2 class="text-xl font-semibold text-white mb-4">Your Websites</h2>
        
        <% if (websites.length === 0) { %>
          <div class="text-center py-8">
            <i class="fas fa-globe text-4xl text-gray-500 mb-3"></i>
            <p class="text-gray-400 mb-4">You don't have any websites yet</p>
            <a href="/websites/create" class="bg-neon-blue hover:bg-blue-600 text-white px-4 py-2 rounded-md transition-colors">
              <i class="fas fa-plus mr-2"></i>Create Website
            </a>
          </div>
        <% } else { %>
          <div class="space-y-4">
            <% websites.forEach(website => { %>
              <div class="bg-dark-300 rounded-lg p-4 hover:border-neon-blue border border-transparent transition-colors cursor-pointer website-select" data-id="<%= website._id %>">
                <h3 class="text-white font-medium mb-1"><%= website.title %></h3>
                <p class="text-gray-400 text-sm truncate"><%= website.description %></p>
              </div>
            <% }); %>
          </div>
        <% } %>
      </div>
      
      <div class="bg-dark-200 rounded-lg p-6">
        <h2 class="text-xl font-semibold text-white mb-4">Recent Chats</h2>
        
        <% if (recentChats.length === 0) { %>
          <div class="text-center py-4">
            <p class="text-gray-400">No recent chats</p>
          </div>
        <% } else { %>
          <div class="space-y-3">
            <% recentChats.forEach(chat => { %>
              <div class="bg-dark-300 rounded-lg p-3 hover:bg-dark-400 transition-colors cursor-pointer chat-history" data-id="<%= chat._id %>">
                <div class="flex justify-between items-start">
                  <div>
                    <h4 class="text-white font-medium"><%= chat.website.title %></h4>
                    <p class="text-gray-400 text-xs"><%= new Date(chat.lastUpdated).toLocaleString() %></p>
                  </div>
                  <div class="text-gray-400">
                    <i class="fas fa-comments"></i>
                    <span class="text-xs"><%= chat.messages.length %></span>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        <% } %>
      </div>
    </div>
    
    <!-- Right Column: Chat Interface -->
    <div class="lg:col-span-2">
      <div class="bg-dark-200 rounded-lg overflow-hidden h-[600px] flex flex-col">
        <!-- Chat Header -->
        <div class="bg-dark-300 p-4 border-b border-gray-700">
          <div id="chat-header" class="flex items-center">
            <i class="fas fa-robot text-neon-blue mr-3 text-xl"></i>
            <div>
              <h3 class="text-white font-medium">Website Customization Assistant</h3>
              <p class="text-gray-400 text-sm" id="selected-website-name">Select a website to start chatting</p>
            </div>
          </div>
        </div>
        
        <!-- Chat Messages -->
        <div id="chat-messages" class="flex-grow overflow-y-auto p-4 space-y-4">
          <div class="flex items-start">
            <div class="flex-shrink-0 w-8 h-8 rounded-full bg-neon-blue flex items-center justify-center text-white mr-3">
              <i class="fas fa-robot"></i>
            </div>
            <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
              <p class="text-white">Hello! I'm your Website Customization Assistant. Select a website from the left panel, and I'll help you improve its design, content, and performance.</p>
            </div>
          </div>
        </div>
        
        <!-- Chat Input -->
        <div class="p-4 border-t border-gray-700">
          <form id="chat-form" class="flex items-center">
            <input type="hidden" id="website-id" value="">
            <input type="hidden" id="chat-id" value="">
            <input type="text" id="message-input" placeholder="Type your message..." class="flex-grow bg-dark-300 border border-gray-600 rounded-l-md px-4 py-2 text-white focus:outline-none focus:border-neon-blue" disabled>
            <button type="submit" id="send-button" class="bg-neon-blue hover:bg-blue-600 text-white px-4 py-2 rounded-r-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed" disabled>
              <i class="fas fa-paper-plane"></i>
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const websiteSelectors = document.querySelectorAll('.website-select');
    const chatHistoryItems = document.querySelectorAll('.chat-history');
    const chatMessages = document.getElementById('chat-messages');
    const messageInput = document.getElementById('message-input');
    const sendButton = document.getElementById('send-button');
    const chatForm = document.getElementById('chat-form');
    const websiteIdInput = document.getElementById('website-id');
    const chatIdInput = document.getElementById('chat-id');
    const selectedWebsiteName = document.getElementById('selected-website-name');
    
    let currentWebsiteId = null;
    let currentChatId = null;
    
    // Select website
    websiteSelectors.forEach(selector => {
      selector.addEventListener('click', function() {
        const websiteId = this.getAttribute('data-id');
        const websiteName = this.querySelector('h3').textContent;
        
        // Update UI
        websiteSelectors.forEach(s => s.classList.remove('border-neon-blue'));
        this.classList.add('border-neon-blue');
        
        // Enable chat
        messageInput.disabled = false;
        sendButton.disabled = false;
        selectedWebsiteName.textContent = websiteName;
        
        // Set current website
        currentWebsiteId = websiteId;
        websiteIdInput.value = websiteId;
        
        // Reset chat
        currentChatId = null;
        chatIdInput.value = '';
        
        // Add welcome message
        chatMessages.innerHTML = `
          <div class="flex items-start">
            <div class="flex-shrink-0 w-8 h-8 rounded-full bg-neon-blue flex items-center justify-center text-white mr-3">
              <i class="fas fa-robot"></i>
            </div>
            <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
              <p class="text-white">I'll help you customize your website "${websiteName}". What specific aspect would you like to improve?</p>
            </div>
          </div>
        `;
        
        // Scroll to bottom
        chatMessages.scrollTop = chatMessages.scrollHeight;
      });
    });
    
    // Load chat history
    chatHistoryItems.forEach(item => {
      item.addEventListener('click', async function() {
        const chatId = this.getAttribute('data-id');
        
        // TODO: In a real implementation, you would load the chat history from the server
        // For now, we'll just simulate it
        
        // Update UI
        chatHistoryItems.forEach(i => i.classList.remove('bg-dark-400'));
        this.classList.add('bg-dark-400');
        
        // Enable chat
        messageInput.disabled = false;
        sendButton.disabled = false;
        
        // Set current chat
        currentChatId = chatId;
        chatIdInput.value = chatId;
        
        // Get website name
        const websiteName = this.querySelector('h4').textContent;
        selectedWebsiteName.textContent = websiteName;
        
        // Simulate loading chat history
        chatMessages.innerHTML = `
          <div class="flex items-start">
            <div class="flex-shrink-0 w-8 h-8 rounded-full bg-neon-blue flex items-center justify-center text-white mr-3">
              <i class="fas fa-robot"></i>
            </div>
            <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
              <p class="text-white">Welcome back! How can I help you with "${websiteName}" today?</p>
            </div>
          </div>
        `;
        
        // Scroll to bottom
        chatMessages.scrollTop = chatMessages.scrollHeight;
      });
    });
    
    // Send message
    chatForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const message = messageInput.value.trim();
      if (!message) return;
      
      // Add user message to chat
      chatMessages.innerHTML += `
        <div class="flex items-start justify-end">
          <div class="bg-neon-blue rounded-lg p-3 max-w-[80%]">
            <p class="text-white">${message}</p>
          </div>
          <div class="flex-shrink-0 w-8 h-8 rounded-full bg-dark-300 flex items-center justify-center text-white ml-3">
            <i class="fas fa-user"></i>
          </div>
        </div>
      `;
      
      // Clear input
      messageInput.value = '';
      
      // Scroll to bottom
      chatMessages.scrollTop = chatMessages.scrollHeight;
      
      // Add loading indicator
      const loadingId = Date.now();
      chatMessages.innerHTML += `
        <div id="loading-${loadingId}" class="flex items-start">
          <div class="flex-shrink-0 w-8 h-8 rounded-full bg-neon-blue flex items-center justify-center text-white mr-3">
            <i class="fas fa-robot"></i>
          </div>
          <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
            <p class="text-white">
              <span class="typing-indicator">
                <span class="dot"></span>
                <span class="dot"></span>
                <span class="dot"></span>
              </span>
            </p>
          </div>
        </div>
      `;
      
      // Scroll to bottom
      chatMessages.scrollTop = chatMessages.scrollHeight;
      
      try {
        // Send message to server
        const response = await fetch('/website-assistant/chat/' + (currentChatId || 'new') + '/message', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            websiteId: currentWebsiteId,
            message,
            chatId: currentChatId
          })
        });
        
        const data = await response.json();
        
        // Remove loading indicator
        const loadingElement = document.getElementById(`loading-${loadingId}`);
        if (loadingElement) {
          loadingElement.remove();
        }
        
        if (data.success) {
          // Add AI response to chat
          chatMessages.innerHTML += `
            <div class="flex items-start">
              <div class="flex-shrink-0 w-8 h-8 rounded-full bg-neon-blue flex items-center justify-center text-white mr-3">
                <i class="fas fa-robot"></i>
              </div>
              <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
                <p class="text-white">${data.response}</p>
              </div>
            </div>
          `;
          
          // Update chat ID if new
          if (data.chatId && !currentChatId) {
            currentChatId = data.chatId;
            chatIdInput.value = data.chatId;
          }
        } else {
          // Show error
          chatMessages.innerHTML += `
            <div class="flex items-start">
              <div class="flex-shrink-0 w-8 h-8 rounded-full bg-red-500 flex items-center justify-center text-white mr-3">
                <i class="fas fa-exclamation-triangle"></i>
              </div>
              <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
                <p class="text-white">Sorry, there was an error processing your request. Please try again.</p>
              </div>
            </div>
          `;
        }
      } catch (error) {
        console.error('Error sending message:', error);
        
        // Remove loading indicator
        const loadingElement = document.getElementById(`loading-${loadingId}`);
        if (loadingElement) {
          loadingElement.remove();
        }
        
        // Show error
        chatMessages.innerHTML += `
          <div class="flex items-start">
            <div class="flex-shrink-0 w-8 h-8 rounded-full bg-red-500 flex items-center justify-center text-white mr-3">
              <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="bg-dark-300 rounded-lg p-3 max-w-[80%]">
              <p class="text-white">Sorry, there was an error sending your message. Please try again.</p>
            </div>
          </div>
        `;
      }
      
      // Scroll to bottom
      chatMessages.scrollTop = chatMessages.scrollHeight;
    });
  });
</script>

<style>
  /* Typing indicator */
  .typing-indicator {
    display: inline-flex;
    align-items: center;
  }
  
  .typing-indicator .dot {
    display: inline-block;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: white;
    margin: 0 2px;
    animation: typing 1.4s infinite ease-in-out;
  }
  
  .typing-indicator .dot:nth-child(1) {
    animation-delay: 0s;
  }
  
  .typing-indicator .dot:nth-child(2) {
    animation-delay: 0.2s;
  }
  
  .typing-indicator .dot:nth-child(3) {
    animation-delay: 0.4s;
  }
  
  @keyframes typing {
    0%, 60%, 100% {
      transform: translateY(0);
      opacity: 0.6;
    }
    30% {
      transform: translateY(-4px);
      opacity: 1;
    }
  }
</style>
