<div class="max-w-4xl mx-auto">
  <div class="bg-gradient-to-br from-gray-900 to-gray-800 rounded-lg border border-indigo-500/20 overflow-hidden mb-8 shadow-xl animate-fade-in">
    <div class="bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 p-6 text-center relative">
      <div class="absolute inset-0 bg-dark-200/50"></div>
      <div class="relative">
        <div class="w-24 h-24 rounded-full mx-auto mb-4 border-2 border-neon-blue overflow-hidden animate-glow shadow-lg">
          <img src="<%= user.profilePicture %>" alt="<%= user.username %>" class="w-full h-full object-cover">
        </div>
        <h1 class="text-2xl font-bold mb-1 text-white"><%= user.username %></h1>
        <p class="text-gray-400"><%= user.email %></p>
        <div class="flex items-center justify-center mt-2 space-x-2">
          <i class="fas fa-calendar-alt text-indigo-400 text-sm"></i>
          <p class="text-sm text-gray-400">Member since <%= new Date(user.createdAt).toLocaleDateString() %></p>
        </div>
        <div class="mt-3 flex justify-center space-x-3">
          <span class="bg-indigo-900/50 text-indigo-300 text-xs px-3 py-1 rounded-full border border-indigo-500/30">
            <i class="fas fa-user-shield mr-1"></i> <%= user.role %>
          </span>
          <% if (user.adFree && user.adFreeUntil && new Date(user.adFreeUntil) > new Date()) { %>
            <span class="bg-green-900/50 text-green-300 text-xs px-3 py-1 rounded-full border border-green-500/30">
              <i class="fas fa-crown mr-1"></i> Ad-Free
            </span>
          <% } %>
        </div>
      </div>
    </div>

    <div class="p-6">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 animate-fade-in" style="animation-delay: 0.1s;">
        <div class="bg-dark-200 p-4 rounded-lg text-center hover:bg-dark-300 transition-all duration-300 border border-gray-700/50">
          <div class="bg-indigo-900/30 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-3">
            <i class="fas fa-chart-line text-indigo-400 text-xl"></i>
          </div>
          <h3 class="text-gray-400 text-sm mb-1">Total Requests</h3>
          <p class="text-2xl font-semibold text-white"><%= user.requestsCount %></p>
        </div>

        <div class="bg-dark-200 p-4 rounded-lg text-center hover:bg-dark-300 transition-all duration-300 border border-gray-700/50">
          <div class="bg-purple-900/30 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-3">
            <i class="fas fa-user-tag text-purple-400 text-xl"></i>
          </div>
          <h3 class="text-gray-400 text-sm mb-1">Account Type</h3>
          <p class="text-2xl font-semibold text-white capitalize"><%= user.role %></p>
        </div>

        <div class="bg-dark-200 p-4 rounded-lg text-center hover:bg-dark-300 transition-all duration-300 border border-gray-700/50">
          <div class="bg-blue-900/30 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-3">
            <i class="fas fa-comments text-blue-400 text-xl"></i>
          </div>
          <h3 class="text-gray-400 text-sm mb-1">Chat History</h3>
          <p class="text-2xl font-semibold text-white"><%= typeof chatCount !== 'undefined' ? chatCount : 0 %></p>
        </div>
      </div>

      <div class="flex flex-col md:flex-row justify-between items-start md:items-center space-y-4 md:space-y-0 mb-4">
        <h2 class="text-xl font-semibold mb-4">Account Settings</h2>
        <div class="flex flex-wrap gap-3">
          <a href="/digital-twin/dashboard" class="bg-gradient-to-r from-purple-900/50 to-indigo-900/50 hover:from-purple-800/50 hover:to-indigo-800/50 text-white px-4 py-2 rounded-lg flex items-center transition-all duration-300 border border-purple-500/30 shadow-md hover:shadow-purple-500/20 hover:-translate-y-1">
            <i class="fas fa-robot mr-2"></i> My Digital Twin
          </a>
          <a href="/profile/content" class="bg-gradient-to-r from-indigo-900/50 to-blue-900/50 hover:from-indigo-800/50 hover:to-blue-800/50 text-white px-4 py-2 rounded-lg flex items-center transition-all duration-300 border border-indigo-500/30 shadow-md hover:shadow-indigo-500/20 hover:-translate-y-1">
            <i class="fas fa-newspaper mr-2"></i> My Content
          </a>
          <a href="/chat" class="bg-gradient-to-r from-blue-900/50 to-cyan-900/50 hover:from-blue-800/50 hover:to-cyan-800/50 text-white px-4 py-2 rounded-lg flex items-center transition-all duration-300 border border-blue-500/30 shadow-md hover:shadow-blue-500/20 hover:-translate-y-1">
            <i class="fas fa-arrow-left mr-2"></i> Back to Chat
          </a>
        </div>
      </div>

      <div class="border-t border-gray-800 pt-4">
        <!-- Tabs for Desktop -->
        <div class="hidden md:flex border-b border-indigo-500/20 mb-6 overflow-x-auto pb-1 justify-center">
          <div class="inline-flex bg-gray-800/50 rounded-lg p-1 border border-indigo-500/20 shadow-lg">
            <button class="tab-btn active py-3 px-5 rounded-md text-white font-medium flex items-center" data-tab="profile">
              <i class="fas fa-user mr-2"></i> <span>Profile</span>
            </button>
            <button class="tab-btn py-3 px-5 rounded-md text-gray-400 hover:text-white font-medium flex items-center" data-tab="password">
              <i class="fas fa-lock mr-2"></i> <span>Password</span>
            </button>
            <button class="tab-btn py-3 px-5 rounded-md text-gray-400 hover:text-white font-medium flex items-center" data-tab="picture">
              <i class="fas fa-image mr-2"></i> <span>Profile Picture</span>
            </button>
            <button class="tab-btn py-3 px-5 rounded-md text-gray-400 hover:text-white font-medium flex items-center" data-tab="privacy">
              <i class="fas fa-shield-alt mr-2"></i> <span>Privacy</span>
            </button>
            <button class="tab-btn py-3 px-5 rounded-md text-gray-400 hover:text-white font-medium flex items-center" data-tab="subscription">
              <i class="fas fa-ad mr-2"></i> <span>Ad-Free</span>
            </button>
            <button class="tab-btn py-3 px-5 rounded-md text-gray-400 hover:text-white font-medium flex items-center" data-tab="danger">
              <i class="fas fa-exclamation-triangle mr-2"></i> <span>Danger Zone</span>
            </button>
          </div>
        </div>

        <!-- Mobile Tab Selector -->
        <div class="md:hidden mb-6">
          <div class="relative">
            <select id="mobile-tab-selector" class="w-full bg-gradient-to-r from-gray-800 to-gray-900 text-white py-3 px-4 pr-8 rounded-lg border border-indigo-500/30 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 appearance-none animate-fade-in dark-select">
              <option value="profile">Profile</option>
              <option value="password">Password</option>
              <option value="picture">Profile Picture</option>
              <option value="privacy">Privacy</option>
              <option value="subscription">Ad-Free</option>
              <option value="danger">Danger Zone</option>
            </select>
            <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-3 text-indigo-400">
              <i class="fas fa-chevron-down"></i>
            </div>
          </div>
        </div>

        <!-- Profile Tab -->
        <div id="profile-tab" class="tab-content">

          <% if (typeof errors != 'undefined') { %>
            <div class="bg-red-900/50 border border-red-500 text-white px-4 py-3 rounded-md mb-4">
              <% errors.forEach(function(error) { %>
                <p><i class="fas fa-exclamation-circle mr-2"></i> <%= error.msg %></p>
              <% }); %>
            </div>
          <% } %>

          <form action="/profile/update?_method=PUT" method="POST">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
              <div>
                <label for="username" class="block text-gray-300 mb-2 font-medium">Username</label>
                <input
                  type="text"
                  id="username"
                  name="username"
                  class="w-full bg-gray-800/50 border border-gray-700 rounded-lg py-3 px-4 text-white focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/50 transition-all duration-200"
                  value="<%= typeof user !== 'undefined' && user.username ? user.username : '' %>"
                  required
                />
              </div>

              <div>
                <label for="email" class="block text-gray-300 mb-2 font-medium">Email</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  class="w-full bg-gray-800/50 border border-gray-700 rounded-lg py-3 px-4 text-white focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/50 transition-all duration-200"
                  value="<%= typeof user !== 'undefined' && user.email ? user.email : '' %>"
                  required
                />
              </div>
            </div>

            <button
              type="submit"
              class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-medium hover:from-indigo-700 hover:to-purple-700 transition-all duration-200 flex items-center justify-center transform hover:-translate-y-1 shadow-lg hover:shadow-indigo-500/20"
            >
              <i class="fas fa-save mr-2"></i> Update Profile
            </button>
          </form>
        </div>

        <!-- Password Tab -->
        <div id="password-tab" class="tab-content hidden">
          <% if (typeof passwordErrors != 'undefined') { %>
            <div class="bg-red-900/50 border border-red-500 text-white px-4 py-3 rounded-md mb-4">
              <% passwordErrors.forEach(function(error) { %>
                <p><i class="fas fa-exclamation-circle mr-2"></i> <%= error.msg %></p>
              <% }); %>
            </div>
          <% } %>

          <form action="/profile/password?_method=PUT" method="POST">
            <div class="space-y-6">
              <div>
                <label for="currentPassword" class="block text-gray-300 mb-2 font-medium">Current Password</label>
                <div class="relative">
                  <input
                    type="password"
                    id="currentPassword"
                    name="currentPassword"
                    class="w-full bg-gray-800/50 border border-gray-700 rounded-lg py-3 pl-4 pr-10 text-white focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/50 transition-all duration-200"
                    placeholder="Enter your current password"
                    required
                  />
                  <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                    <i class="fas fa-lock text-gray-500"></i>
                  </div>
                </div>
              </div>

              <div>
                <label for="newPassword" class="block text-gray-300 mb-2 font-medium">New Password</label>
                <div class="relative">
                  <input
                    type="password"
                    id="newPassword"
                    name="newPassword"
                    class="w-full bg-gray-800/50 border border-gray-700 rounded-lg py-3 pl-4 pr-10 text-white focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/50 transition-all duration-200"
                    placeholder="Enter your new password"
                    required
                  />
                  <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                    <i class="fas fa-key text-gray-500"></i>
                  </div>
                </div>
              </div>

              <div>
                <label for="confirmPassword" class="block text-gray-300 mb-2 font-medium">Confirm New Password</label>
                <div class="relative">
                  <input
                    type="password"
                    id="confirmPassword"
                    name="confirmPassword"
                    class="w-full bg-gray-800/50 border border-gray-700 rounded-lg py-3 pl-4 pr-10 text-white focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500/50 transition-all duration-200"
                    placeholder="Confirm your new password"
                    required
                  />
                  <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                    <i class="fas fa-check-circle text-gray-500"></i>
                  </div>
                </div>
              </div>

              <button
                type="submit"
                class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-medium hover:from-indigo-700 hover:to-purple-700 transition-all duration-200 flex items-center justify-center transform hover:-translate-y-1 shadow-lg hover:shadow-indigo-500/20 w-full md:w-auto"
              >
                <i class="fas fa-lock mr-2"></i> Update Password
              </button>
            </div>
          </form>
        </div>

        <!-- Profile Picture Tab -->
        <div id="picture-tab" class="tab-content hidden">
          <div class="mb-6">
            <div class="w-32 h-32 rounded-full mx-auto mb-4 border-2 border-neon-blue overflow-hidden">
              <img src="<%= typeof user !== 'undefined' && user.profilePicture ? user.profilePicture : '/images/default-avatar.png' %>" alt="<%= typeof user !== 'undefined' && user.username ? user.username : 'User' %>" class="w-full h-full object-cover" id="profile-preview">
            </div>

            <% if (typeof user !== 'undefined' && user.profilePicture && user.profilePicture !== '/images/default-avatar.png') { %>
              <div class="text-center">
                <form action="/profile/picture/remove?_method=DELETE" method="POST" class="inline-block">
                  <button type="submit" class="text-red-500 hover:text-red-400 transition-colors text-sm">
                    <i class="fas fa-trash-alt mr-1"></i> Remove Profile Picture
                  </button>
                </form>
              </div>
            <% } %>
          </div>

          <form action="/profile/picture?_method=PUT" method="POST" enctype="multipart/form-data">
            <div class="mb-6">
              <label for="profilePicture" class="block text-gray-300 mb-2">Upload New Picture</label>
              <input
                type="file"
                id="profilePicture"
                name="profilePicture"
                class="w-full bg-dark-200 border border-gray-700 rounded-md py-3 px-4 text-white focus:outline-none focus:border-neon-blue transition-colors"
                accept="image/*"
                required
              />
              <p class="text-gray-500 text-sm mt-1">Max file size: 5MB. Recommended size: 200x200 pixels.</p>
            </div>

            <button
              type="submit"
              class="bg-gradient-to-r from-neon-blue to-neon-purple text-white py-2 px-6 rounded-md font-medium hover:opacity-90 transition-opacity"
            >
              Update Picture
            </button>
          </form>
        </div>

        <!-- Privacy Tab -->
        <div id="privacy-tab" class="tab-content hidden">
          <div class="mb-6">
            <h3 class="text-xl font-semibold mb-4">Privacy Settings</h3>
            <p class="text-gray-300 mb-6">
              Manage your privacy preferences and control how your data is used on our platform.
            </p>

            <div class="space-y-6">
              <!-- Cookie Preferences -->
              <div class="bg-dark-200 p-6 rounded-lg border border-gray-700">
                <div class="flex justify-between items-start mb-4">
                  <div>
                    <h4 class="text-lg font-medium">Cookie Preferences</h4>
                    <p class="text-gray-400 text-sm mt-1">Manage how we use cookies on this website</p>
                  </div>
                  <button id="manageCookiesBtn" class="bg-neon-blue text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors text-sm">
                    Manage Cookies
                  </button>
                </div>
                <p class="text-sm text-gray-400">
                  We use cookies to enhance your experience, analyze traffic, and serve relevant content.
                  You can choose which types of cookies you allow us to use. Essential cookies will always be enabled
                  as they are necessary for the website to function properly.
                </p>
                <div class="mt-4">
                  <a href="/policies/cookies" class="text-neon-blue hover:underline text-sm">View Cookie Policy</a>
                </div>
              </div>

              <!-- Location Tracking -->
              <div class="bg-dark-200 p-6 rounded-lg border border-gray-700">
                <div class="flex justify-between items-start mb-4">
                  <div>
                    <h4 class="text-lg font-medium">Location Tracking</h4>
                    <p class="text-gray-400 text-sm mt-1">Control how we collect and use your location data</p>
                  </div>
                  <div class="flex items-center">
                    <label class="relative inline-flex items-center cursor-pointer">
                      <input type="checkbox" id="locationTrackingToggle" class="sr-only peer">
                      <div class="w-11 h-6 bg-gray-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-neon-blue"></div>
                    </label>
                  </div>
                </div>
                <p class="text-sm text-gray-400">
                  When enabled, we collect your precise location data to provide personalized services and improve your experience.
                  This data is securely stored and only used in accordance with our privacy policy.
                </p>
              </div>

              <!-- Data Usage -->
              <div class="bg-dark-200 p-6 rounded-lg border border-gray-700">
                <div class="flex justify-between items-start mb-4">
                  <div>
                    <h4 class="text-lg font-medium">Data Usage & Analytics</h4>
                    <p class="text-gray-400 text-sm mt-1">Control how we use your data for analytics and improvements</p>
                  </div>
                  <div class="flex items-center">
                    <label class="relative inline-flex items-center cursor-pointer">
                      <input type="checkbox" id="analyticsToggle" class="sr-only peer">
                      <div class="w-11 h-6 bg-gray-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-neon-blue"></div>
                    </label>
                  </div>
                </div>
                <p class="text-sm text-gray-400">
                  When enabled, we collect anonymous usage data to help us understand how you use our services and improve them.
                  This includes information about which features you use, how long you spend on the site, and other interaction data.
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Subscription Tab -->
        <div id="subscription-tab" class="tab-content hidden">
          <div class="mb-6">
            <h3 class="text-xl font-semibold mb-4">Ad-Free Subscription</h3>
            <p class="text-gray-300 mb-6">
              Enjoy a clean, distraction-free experience by subscribing to our ad-free plan.
            </p>

            <% if (user.adFree && user.adFreeUntil && new Date(user.adFreeUntil) > new Date()) { %>
              <!-- Active Subscription -->
              <div class="bg-gradient-to-r from-green-900/30 to-green-800/30 p-6 rounded-lg border border-green-700/50 mb-6">
                <div class="flex items-center mb-4">
                  <div class="bg-green-500/20 p-3 rounded-full mr-4">
                    <i class="fas fa-check-circle text-green-400 text-2xl"></i>
                  </div>
                  <div>
                    <h4 class="text-lg font-medium text-green-400">Active Subscription</h4>
                    <p class="text-gray-300 mt-1">Your ad-free subscription is active until <%= new Date(user.adFreeUntil).toLocaleDateString() %></p>
                  </div>
                </div>

                <!-- Countdown Timer -->
                <div class="subscription-timer-container mb-4">
                  <div class="flex items-center justify-center mb-2">
                    <i class="fas fa-clock text-indigo-400 mr-2"></i>
                    <span class="text-indigo-300 font-medium">Subscription Time Remaining:</span>
                  </div>
                  <div class="countdown-timer" data-expires="<%= user.adFreeUntil %>">
                    <div class="countdown-segment">
                      <div class="countdown-value" id="countdown-days">--</div>
                      <div class="countdown-label">Days</div>
                    </div>
                    <div class="countdown-segment">
                      <div class="countdown-value" id="countdown-hours">--</div>
                      <div class="countdown-label">Hours</div>
                    </div>
                    <div class="countdown-segment">
                      <div class="countdown-value" id="countdown-minutes">--</div>
                      <div class="countdown-label">Minutes</div>
                    </div>
                    <div class="countdown-segment">
                      <div class="countdown-value" id="countdown-seconds">--</div>
                      <div class="countdown-label">Seconds</div>
                    </div>
                  </div>
                </div>

                <p class="text-gray-400 mb-4">
                  You are currently enjoying an ad-free experience across the entire platform. Thank you for your support!
                </p>
                <form action="/subscription/cancel" method="POST">
                  <button type="submit" class="bg-red-600/80 hover:bg-red-700 text-white py-2 px-4 rounded-md text-sm transition-colors"
                    onclick="return confirm('Are you sure you want to cancel your subscription? Ads will start showing immediately.')">
                    <i class="fas fa-times-circle mr-1"></i> Cancel Subscription
                  </button>
                </form>
              </div>
            <% } else { %>
              <!-- No Active Subscription -->
              <div class="bg-dark-200 p-6 rounded-lg border border-gray-700 mb-6">
                <div class="flex items-center mb-4">
                  <div class="bg-gray-700/50 p-3 rounded-full mr-4">
                    <i class="fas fa-ad text-gray-400 text-2xl"></i>
                  </div>
                  <div>
                    <h4 class="text-lg font-medium">No Active Subscription</h4>
                    <p class="text-gray-400 mt-1">You are currently seeing ads across the platform</p>
                  </div>
                </div>
                <p class="text-gray-400 mb-4">
                  Subscribe to our ad-free plan to enjoy a clean, distraction-free experience and support our platform.
                </p>
                <a href="/subscription" class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-2 px-6 rounded-md font-medium hover:from-indigo-700 hover:to-purple-700 transition-all inline-block">
                  <i class="fas fa-crown mr-1"></i> View Subscription Plans
                </a>
              </div>
            <% } %>

            <div class="bg-dark-200 p-6 rounded-lg border border-gray-700">
              <h4 class="text-lg font-medium mb-4">Benefits of Ad-Free Subscription</h4>
              <ul class="space-y-3">
                <li class="flex items-start">
                  <i class="fas fa-check text-green-500 mt-1 mr-3"></i>
                  <span>Enjoy a clean, distraction-free experience</span>
                </li>
                <li class="flex items-start">
                  <i class="fas fa-check text-green-500 mt-1 mr-3"></i>
                  <span>Faster page loading times</span>
                </li>
                <li class="flex items-start">
                  <i class="fas fa-check text-green-500 mt-1 mr-3"></i>
                  <span>Support the development of FTRAISE AI</span>
                </li>
                <li class="flex items-start">
                  <i class="fas fa-check text-green-500 mt-1 mr-3"></i>
                  <span>No tracking from ad networks</span>
                </li>
              </ul>
            </div>
          </div>
        </div>

        <!-- Danger Zone Tab -->
        <div id="danger-tab" class="tab-content hidden">
          <div class="bg-red-900/30 border border-red-800 rounded-lg p-6">
            <h3 class="text-xl font-semibold mb-4 text-red-400">Delete Account</h3>
            <p class="text-gray-300 mb-6">
              Warning: This action is permanent and cannot be undone. All your data, including chat history, will be permanently deleted.
            </p>

            <form id="delete-account-form" action="/users/delete?_method=DELETE" method="POST">
              <div class="mb-4">
                <label class="flex items-center">
                  <input type="checkbox" id="confirm-delete" class="mr-2">
                  <span class="text-gray-300">I understand that this action cannot be undone</span>
                </label>
              </div>

              <button
                type="submit"
                id="delete-account-btn"
                class="bg-red-600 text-white py-2 px-6 rounded-md font-medium hover:bg-red-700 transition-colors opacity-50 cursor-not-allowed"
                disabled
              >
                Delete My Account
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Back to Top Button -->
<button id="back-to-top" class="fixed bottom-6 right-6 bg-gradient-to-r from-indigo-600 to-purple-600 text-white p-3 rounded-full shadow-lg opacity-0 invisible transition-all duration-300 hover:transform hover:-translate-y-1 z-50">
  <i class="fas fa-arrow-up"></i>
</button>

<style>
  /* Modern Tab Styles */
  .tab-content {
    display: block;
    background: linear-gradient(135deg, #1e293b, #0f172a);
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    margin-top: 20px;
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  .tab-content.hidden {
    display: none;
  }

  /* Dropdown Styles - Fix for white background */
  #mobile-tab-selector option {
    background-color: #1e293b;
    color: white;
  }

  /* Additional styling for dark select */
  .dark-select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: #1e293b;
    color: white;
  }

  /* For Firefox */
  .dark-select:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 white;
  }

  /* For IE and Edge */
  .dark-select::-ms-expand {
    display: none;
  }

  /* Force dark background for select dropdown in all browsers */
  @media screen and (-webkit-min-device-pixel-ratio:0) {
    select.dark-select {
      background-color: #1e293b !important;
    }
  }

  /* Tab Button Styles */
  .tab-btn {
    position: relative;
    transition: all 0.3s ease;
    padding: 12px 20px !important;
    font-weight: 500 !important;
    position: relative;
    z-index: 1;
    overflow: hidden;
    white-space: nowrap;
  }

  .tab-btn:hover {
    color: white !important;
    background-color: rgba(99, 102, 241, 0.1);
  }

  .tab-btn.active {
    color: white !important;
    background: linear-gradient(135deg, rgba(79, 70, 229, 0.2), rgba(99, 102, 241, 0.1));
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .tab-btn.active::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
    z-index: -1;
  }

  /* Form Styles */
  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #e2e8f0;
    transition: all 0.3s ease;
  }

  .form-group input {
    width: 100%;
    padding: 12px 16px;
    background-color: rgba(30, 41, 59, 0.5);
    border: 1px solid rgba(99, 102, 241, 0.2);
    border-radius: 8px;
    color: white;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .form-group input:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3), 0 4px 12px rgba(0, 0, 0, 0.1);
    background-color: rgba(30, 41, 59, 0.7);
    transform: translateY(-1px);
  }

  .form-group input:hover {
    border-color: rgba(99, 102, 241, 0.4);
  }

  /* Button Styles */
  button[type="submit"] {
    background: linear-gradient(90deg, #3b82f6, #8b5cf6) !important;
    border: none !important;
    padding: 12px 24px !important;
    border-radius: 8px !important;
    font-weight: 500 !important;
    color: white !important;
    transition: all 0.3s ease !important;
    display: inline-flex !important;
    align-items: center !important;
    gap: 8px !important;
  }

  button[type="submit"]:hover {
    transform: translateY(-2px) !important;
    box-shadow: 0 8px 15px rgba(59, 130, 246, 0.3) !important;
  }

  /* Animation for tab content */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes slideIn {
    from { opacity: 0; transform: translateX(20px); }
    to { opacity: 1; transform: translateX(0); }
  }

  .tab-content:not(.hidden) {
    animation: fadeIn 0.3s ease-out;
  }

  /* Form field animations */
  .form-group, .grid > div {
    animation: slideIn 0.4s ease-out forwards;
    opacity: 0;
  }

  .form-group:nth-child(1), .grid > div:nth-child(1) {
    animation-delay: 0.1s;
  }

  .form-group:nth-child(2), .grid > div:nth-child(2) {
    animation-delay: 0.2s;
  }

  button[type="submit"] {
    animation: fadeIn 0.5s ease-out forwards;
    animation-delay: 0.3s;
    opacity: 0;
  }

  /* Profile Picture Styles */
  .profile-picture-container {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    padding: 20px;
    text-align: center;
  }

  /* Danger Zone Styles */
  .danger-zone-container {
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.3);
    border-radius: 12px;
    padding: 20px;
  }

  /* Tab Navigation Container */
  .border-b.border-gray-800.mb-6 {
    border-bottom-color: rgba(99, 102, 241, 0.2) !important;
    padding-bottom: 4px;
  }

  /* Mobile Tab Selector */
  #mobile-tab-selector {
    background-image: linear-gradient(to right, #1e293b, #0f172a);
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  #mobile-tab-selector:focus {
    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.4), 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  /* Custom Select Arrow */
  .pointer-events-none.absolute.inset-y-0.right-0 {
    animation: pulse 2s infinite;
  }

  /* Responsive Card Styles */
  @media (max-width: 768px) {
    .tab-content {
      padding: 16px;
    }

    .grid.grid-cols-1.md\:grid-cols-2 {
      grid-template-columns: 1fr;
    }

    .max-w-4xl {
      padding: 0 12px;
    }

    button[type="submit"] {
      width: 100%;
      justify-content: center;
    }

    .bg-dark-200 {
      padding: 16px 12px;
    }

    /* Responsive countdown timer */
    .countdown-timer {
      flex-wrap: wrap;
      gap: 8px;
    }

    .countdown-segment {
      min-width: 45px;
      flex: 1;
    }

    .countdown-value {
      font-size: 1.4rem;
      padding: 6px 8px;
      min-width: 45px;
    }

    .countdown-label {
      font-size: 0.7rem;
    }
  }

  /* Back to Top Button */
  #back-to-top.visible {
    opacity: 1;
    visibility: visible;
  }

  /* Card Hover Effects */
  .bg-dark-200 {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .bg-dark-200:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
  }

  /* Countdown Timer Styles */
  .subscription-timer-container {
    background: rgba(79, 70, 229, 0.1);
    border-radius: 10px;
    padding: 16px;
    text-align: center;
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  .countdown-timer {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-top: 10px;
  }

  .countdown-segment {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 60px;
  }

  .countdown-value {
    font-size: 1.8rem;
    font-weight: 700;
    color: #a5b4fc;
    background: rgba(49, 46, 129, 0.3);
    border-radius: 8px;
    padding: 8px 12px;
    min-width: 60px;
    text-align: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .countdown-label {
    font-size: 0.8rem;
    color: #a5b4fc;
    margin-top: 4px;
    font-weight: 500;
  }

  /* Animation for countdown timer */
  @keyframes pulse-countdown {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }

  .countdown-value.ending {
    color: #f87171;
    animation: pulse-countdown 1s infinite;
  }
</style>

<script>
  // Tab switching
  document.addEventListener('DOMContentLoaded', function() {
    const tabBtns = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    const mobileTabSelector = document.getElementById('mobile-tab-selector');

    // Fix for dropdown background color
    if (mobileTabSelector) {
      // Apply dark styling to dropdown options
      const options = mobileTabSelector.querySelectorAll('option');
      options.forEach(option => {
        option.style.backgroundColor = '#1e293b';
        option.style.color = 'white';
      });

      // Add event listener for dropdown focus
      mobileTabSelector.addEventListener('mousedown', function() {
        // Force dark background for dropdown
        setTimeout(() => {
          document.querySelectorAll('#mobile-tab-selector option').forEach(opt => {
            opt.style.backgroundColor = '#1e293b';
            opt.style.color = 'white';
          });
        }, 0);
      });
    }

    // Log tab information to console for debugging
    console.log(`Found ${tabBtns.length} tabs and ${tabContents.length} content sections`);

    // Function to switch tabs
    function switchTab(tabId) {
      // Remove active class from all buttons
      tabBtns.forEach(b => {
        b.classList.remove('active', 'text-white');
        b.classList.add('text-gray-400');
      });

      // Add active class to clicked button
      const activeBtn = document.querySelector(`.tab-btn[data-tab="${tabId}"]`);
      if (activeBtn) {
        activeBtn.classList.add('active', 'text-white');
        activeBtn.classList.remove('text-gray-400');
      }

      // Update mobile selector
      if (mobileTabSelector) {
        mobileTabSelector.value = tabId;
      }

      // Hide all tab contents
      tabContents.forEach(content => {
        content.classList.add('hidden');
      });

      // Show selected tab content
      const activeContent = document.getElementById(`${tabId}-tab`);
      if (activeContent) {
        activeContent.classList.remove('hidden');

        // Reset animations by removing and re-adding the class
        activeContent.classList.remove('animate-fade-in');

        // Force a reflow to restart the animation
        void activeContent.offsetWidth;

        // Add animation class back
        activeContent.classList.add('animate-fade-in');

        // Reset form field animations
        const formGroups = activeContent.querySelectorAll('.form-group, .grid > div');
        formGroups.forEach((group, index) => {
          group.style.animationDelay = `${0.1 * (index + 1)}s`;
          group.style.opacity = '0';

          // Force a reflow
          void group.offsetWidth;

          group.style.opacity = '';
        });

        // Initialize countdown timer if switching to subscription tab
        if (tabId === 'subscription') {
          initCountdownTimer();
        }

        console.log(`Showing tab: ${tabId}`);
      } else {
        console.error(`Error: Tab content not found for ${tabId}`);
      }
    }

    // Add click event to all tab buttons
    tabBtns.forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const tabId = btn.getAttribute('data-tab');
        switchTab(tabId);
      });
    });

    // Add change event to mobile selector
    if (mobileTabSelector) {
      mobileTabSelector.addEventListener('change', (e) => {
        const tabId = e.target.value;
        switchTab(tabId);
      });
    }

    // Initialize with the first tab or the active tab
    const activeTab = document.querySelector('.tab-btn.active');
    if (activeTab) {
      switchTab(activeTab.getAttribute('data-tab'));
    } else if (tabBtns.length > 0) {
      switchTab(tabBtns[0].getAttribute('data-tab'));
    }

    // Add hover effects to cards
    const cards = document.querySelectorAll('.bg-dark-200');
    cards.forEach(card => {
      card.classList.add('transition-all');
    });
  });

  // Profile picture preview
  const profilePicture = document.getElementById('profilePicture');
  const profilePreview = document.getElementById('profile-preview');

  profilePicture?.addEventListener('change', (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        profilePreview.src = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  });

  // Delete account confirmation
  const confirmDelete = document.getElementById('confirm-delete');

  // Subscription Countdown Timer
  function initCountdownTimer() {
    const timerContainer = document.querySelector('.countdown-timer');
    if (!timerContainer) return;

    const expiryDate = new Date(timerContainer.dataset.expires);
    const daysElement = document.getElementById('countdown-days');
    const hoursElement = document.getElementById('countdown-hours');
    const minutesElement = document.getElementById('countdown-minutes');
    const secondsElement = document.getElementById('countdown-seconds');

    function updateCountdown() {
      const now = new Date();
      const timeRemaining = expiryDate - now;

      if (timeRemaining <= 0) {
        // Subscription has expired
        daysElement.textContent = '0';
        hoursElement.textContent = '0';
        minutesElement.textContent = '0';
        secondsElement.textContent = '0';

        // Add expired class to all countdown values
        document.querySelectorAll('.countdown-value').forEach(el => {
          el.classList.add('ending');
        });

        return;
      }

      // Calculate time units
      const days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
      const hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

      // Update the countdown elements
      daysElement.textContent = days;
      hoursElement.textContent = hours < 10 ? `0${hours}` : hours;
      minutesElement.textContent = minutes < 10 ? `0${minutes}` : minutes;
      secondsElement.textContent = seconds < 10 ? `0${seconds}` : seconds;

      // Add visual indication when time is running out (less than 3 days)
      if (days < 3) {
        document.querySelectorAll('.countdown-value').forEach(el => {
          el.classList.add('ending');
        });
      }
    }

    // Initial update
    updateCountdown();

    // Update the countdown every second
    setInterval(updateCountdown, 1000);
  }

  // Initialize countdown timer when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    initCountdownTimer();
  });
  const deleteAccountBtn = document.getElementById('delete-account-btn');
  const deleteAccountForm = document.getElementById('delete-account-form');

  confirmDelete?.addEventListener('change', () => {
    if (confirmDelete.checked) {
      deleteAccountBtn.classList.remove('opacity-50', 'cursor-not-allowed');
      deleteAccountBtn.disabled = false;
    } else {
      deleteAccountBtn.classList.add('opacity-50', 'cursor-not-allowed');
      deleteAccountBtn.disabled = true;
    }
  });

  deleteAccountForm?.addEventListener('submit', (e) => {
    if (!confirm('Are you absolutely sure you want to delete your account? This action cannot be undone.')) {
      e.preventDefault();
    }
  });

  // Back to top button functionality
  const backToTopButton = document.getElementById('back-to-top');

  if (backToTopButton) {
    // Show/hide button based on scroll position
    window.addEventListener('scroll', () => {
      if (window.scrollY > 300) {
        backToTopButton.classList.add('visible');
      } else {
        backToTopButton.classList.remove('visible');
      }
    });

    // Scroll to top when clicked
    backToTopButton.addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    });
  }

  // Privacy settings
  document.addEventListener('DOMContentLoaded', function() {
    // Cookie consent management
    const manageCookiesBtn = document.getElementById('manageCookiesBtn');
    if (manageCookiesBtn) {
      manageCookiesBtn.addEventListener('click', function() {
        if (window.cookieConsent && typeof window.cookieConsent.showBanner === 'function') {
          window.cookieConsent.showBanner();
        } else {
          alert('Cookie management is not available at this time. Please try again later.');
        }
      });
    }

    // Location tracking toggle
    const locationTrackingToggle = document.getElementById('locationTrackingToggle');
    if (locationTrackingToggle) {
      // Initialize toggle state from localStorage
      locationTrackingToggle.checked = localStorage.getItem('locationTrackingOptIn') === 'true';

      // Add event listener for toggle changes
      locationTrackingToggle.addEventListener('change', function() {
        if (this.checked) {
          localStorage.setItem('locationTrackingOptIn', 'true');
          // Start location tracking if available
          if (window.locationTracker && typeof window.locationTracker.start === 'function') {
            window.locationTracker.start();
          }
        } else {
          localStorage.setItem('locationTrackingOptIn', 'false');
          // Stop location tracking if available
          if (window.locationTracker && typeof window.locationTracker.stop === 'function') {
            window.locationTracker.stop();
          }
        }
      });
    }

    // Analytics toggle
    const analyticsToggle = document.getElementById('analyticsToggle');
    if (analyticsToggle) {
      // Initialize toggle state from cookie consent
      if (window.cookieConsent) {
        analyticsToggle.checked = window.cookieConsent.isFullConsent();
      }

      // Add event listener for toggle changes
      analyticsToggle.addEventListener('change', function() {
        if (window.cookieConsent) {
          if (this.checked) {
            window.cookieConsent.setConsent('full_consent');
          } else {
            window.cookieConsent.setConsent('essential_only');
          }
        }
      });

      // Listen for cookie consent changes to update toggle
      document.addEventListener('cookieConsentChange', function(event) {
        if (window.cookieConsent) {
          analyticsToggle.checked = window.cookieConsent.isFullConsent();
        }
      });
    }
  });
</script>
