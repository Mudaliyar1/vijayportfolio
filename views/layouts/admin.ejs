<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            dark: {
              100: '#1E1E2E',
              200: '#181825',
              300: '#11111B',
              400: '#0D0D14',
              500: '#09090F',
            },
            'neon-blue': '#00F2FF',
            'neon-purple': '#8A2BE2',
            'neon-green': '#32CD32',
          },
          animation: {
            'gradient-x': 'gradient-x 10s ease infinite',
            'gradient-y': 'gradient-y 10s ease infinite',
            'gradient-xy': 'gradient-xy 10s ease infinite',
            'float': 'float 6s ease-in-out infinite',
          },
          keyframes: {
            'gradient-y': {
              '0%, 100%': {
                'background-size': '400% 400%',
                'background-position': 'center top'
              },
              '50%': {
                'background-size': '200% 200%',
                'background-position': 'center center'
              }
            },
            'gradient-x': {
              '0%, 100%': {
                'background-size': '200% 200%',
                'background-position': 'left center'
              },
              '50%': {
                'background-size': '200% 200%',
                'background-position': 'right center'
              }
            },
            'gradient-xy': {
              '0%, 100%': {
                'background-size': '400% 400%',
                'background-position': 'left center'
              },
              '50%': {
                'background-size': '200% 200%',
                'background-position': 'right center'
              }
            },
            'float': {
              '0%, 100%': { transform: 'translateY(0)' },
              '50%': { transform: 'translateY(-10px)' }
            }
          },
          backdropBlur: {
            xs: '2px',
          }
        }
      }
    }
  </script>
  <style>
    /* Custom scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    ::-webkit-scrollbar-track {
      background: #181825;
    }
    ::-webkit-scrollbar-thumb {
      background: #2D2D3A;
      border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: #3D3D4A;
    }

    /* Admin layout specific styles */
    body {
      padding-top: 0;
      margin-top: 0;
    }

    /* Force navbar to top */
    .admin-navbar {
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      z-index: 30 !important;
      width: 100% !important;
      background-color: #11111B !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .admin-navbar header,
    .admin-navbar nav,
    .admin-navbar nav.bg-dark-300 {
      position: relative !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      width: 100% !important;
      background-color: #11111B !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    /* Ensure navbar content is properly positioned */
    .admin-navbar .container.mx-auto {
      margin-top: 0 !important;
      margin-bottom: 0 !important;
    }

    .admin-sidebar {
      width: 250px;
      position: fixed;
      top: 64px; /* Match navbar height */
      left: 0;
      bottom: 0;
      height: calc(100vh - 64px); /* Subtract navbar height */
      z-index: 20;
      background-color: #181825;
      border-right: 1px solid #2D2D3A;
      display: flex;
      flex-direction: column;
      overflow-x: hidden; /* Hide horizontal overflow */
      overflow-y: auto; /* Allow vertical scrolling */
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
      margin-top: 0;
      transition: all 0.3s ease;
      transform: translateX(0); /* Visible by default */
    }

    /* Collapsed state for desktop */
    .admin-sidebar.collapsed {
      transform: translateX(-250px); /* Hide sidebar when collapsed */
    }

    /* Mobile specific styles */
    @media (max-width: 1030px) {
      .admin-sidebar {
        transform: translateX(-250px); /* Hidden on mobile by default */
        max-height: calc(100vh - 64px); /* Ensure it doesn't exceed viewport height */
        overflow-y: auto; /* Enable scrolling */
        width: 80%; /* Make sidebar wider on mobile */
        max-width: 300px; /* But not too wide */
      }

      .admin-sidebar.active {
        transform: translateX(0); /* Show on mobile when active */
        overflow-y: auto; /* Ensure scrolling is enabled when active */
        max-height: calc(100vh - 64px); /* Limit height to viewport minus header */
      }

      /* Custom scrollbar for admin sidebar on mobile */
      .admin-sidebar::-webkit-scrollbar {
        width: 6px;
      }

      .admin-sidebar::-webkit-scrollbar-track {
        background: #181825;
      }

      .admin-sidebar::-webkit-scrollbar-thumb {
        background-color: #2D2D3A;
        border-radius: 6px;
      }

      .admin-sidebar::-webkit-scrollbar-thumb:hover {
        background-color: #3D3D4A;
      }

      /* Firefox scrollbar */
      .admin-sidebar {
        scrollbar-width: thin;
        scrollbar-color: #2D2D3A #181825;
      }

      /* Ensure sidebar toggle is positioned consistently on mobile */
      .sidebar-toggle {
        position: fixed !important;
        top: 74px !important; /* Same as desktop */
        left: 10px !important; /* Force left alignment */
        right: auto !important; /* Prevent right alignment */
        margin-left: 0 !important; /* Reset any margin */
        margin-right: 0 !important; /* Reset any margin */
        transform: none !important; /* Prevent any transforms */
        display: flex !important; /* Visible by default */
        opacity: 1 !important;
        visibility: visible !important;
      }

      /* Hide toggle button when sidebar is open on mobile */
      body:has(.admin-sidebar.active) .sidebar-toggle,
      .admin-sidebar.active ~ .sidebar-toggle,
      .sidebar-toggle.active,
      .admin-sidebar.active + .sidebar-toggle,
      .admin-sidebar.active + * .sidebar-toggle,
      .admin-sidebar.active + * + .sidebar-toggle,
      .admin-sidebar.active + * + * .sidebar-toggle {
        display: none !important; /* Hide when sidebar is open */
        opacity: 0 !important;
        visibility: hidden !important;
        pointer-events: none !important;
      }

      /* Additional rule to hide toggle button when sidebar is open */
      @media (max-width: 768px) {
        body:has(.admin-sidebar.active) #sidebar-toggle {
          display: none !important;
          opacity: 0 !important;
          visibility: hidden !important;
          pointer-events: none !important;
        }
      }

      /* Show close button only on mobile */
      #admin-sidebar-close {
        display: block !important;
      }
    }

    /* Hide close button on desktop */
    #admin-sidebar-close {
      display: none;
    }

    /* Custom scrollbar for the navigation */
    .custom-scrollbar {
      scrollbar-width: thin;
      scrollbar-color: #2D2D3A #181825;
      overflow-y: auto;
      -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
      max-height: 100%;
      padding-bottom: 200px; /* Add extra padding at the bottom */
    }

    .custom-scrollbar::-webkit-scrollbar {
      width: 6px;
    }

    .custom-scrollbar::-webkit-scrollbar-track {
      background: #181825;
    }

    .custom-scrollbar::-webkit-scrollbar-thumb {
      background-color: #2D2D3A;
      border-radius: 6px;
      border: 2px solid #181825;
    }

    .admin-content {
      padding: 1.5rem;
      overflow-x: hidden;
      width: calc(100% - 250px);
      margin-left: 250px; /* Match sidebar width */
      min-height: calc(100vh - 64px); /* Subtract navbar height */
      transition: margin-left 0.3s ease, width 0.3s ease;
      margin-top: 64px; /* Add navbar height as margin */
    }

    /* Adjust content when sidebar is collapsed on desktop */
    .admin-content.sidebar-collapsed {
      width: 100%;
      margin-left: 0;
    }

    /* Adjust content on mobile */
    @media (max-width: 768px) {
      .admin-content {
        width: 100%;
        margin-left: 0;
      }

      .admin-content.sidebar-active {
        margin-left: 0; /* Don't push content on mobile */
      }
    }

    .sidebar-toggle {
      position: fixed;
      top: 74px; /* 64px navbar height + 10px margin */
      left: 10px;
      right: auto; /* Prevent right alignment */
      z-index: 1000; /* Ensure it's above all other elements */
      background-color: #181825;
      background-image: linear-gradient(to right, #00F2FF, #8A2BE2);
      border: none;
      color: white;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex; /* Always visible */
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
      transition: all 0.3s ease;
      margin-left: 0; /* Reset any margin */
      margin-right: 0; /* Reset any margin */
      margin-top: 0;
      transform: none; /* Prevent any transforms */
    }

    .sidebar-toggle:hover {
      transform: scale(1.1);
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.4);
    }

    .sidebar-toggle.active {
      left: 260px; /* Move toggle button when sidebar is open */
    }

    /* Different toggle button position based on sidebar state */
    .sidebar-toggle.collapsed {
      left: 10px;
    }

    .sidebar-toggle.expanded {
      left: 260px;
    }
  </style>
</head>
<body class="dark bg-dark-300 text-gray-100 min-h-screen">
  <div class="admin-navbar">
    <%- include('../partials/navbar') %>
  </div>

  <button id="sidebar-toggle" class="sidebar-toggle" aria-label="Toggle Sidebar" style="display: flex;">
    <i class="fas fa-bars"></i>
    <i class="fas fa-chevron-left hidden"></i>
  </button>

  <!-- Additional toggle button for mobile menu -->
  <button id="mobile-sidebar-toggle" class="sidebar-toggle hidden" aria-label="Toggle Mobile Sidebar" style="display: none !important;">
    <i class="fas fa-bars"></i>
  </button>

  <style>
    /* Hide toggle buttons when sidebar is open */
    .admin-sidebar.active ~ #sidebar-toggle,
    body:has(.admin-sidebar.active) #sidebar-toggle,
    #admin-sidebar.active ~ #sidebar-toggle,
    body:has(#admin-sidebar.active) #sidebar-toggle,
    .admin-sidebar.active ~ #mobile-sidebar-toggle,
    body:has(.admin-sidebar.active) #mobile-sidebar-toggle,
    #admin-sidebar.active ~ #mobile-sidebar-toggle,
    body:has(#admin-sidebar.active) #mobile-sidebar-toggle {
      display: none !important;
      opacity: 0 !important;
      visibility: hidden !important;
      pointer-events: none !important;
    }

    /* Hide all sidebar toggle buttons in admin page when mobile menu is open */
    body:has(#mobile-menu:not(.hidden)) #sidebar-toggle,
    body:has(#mobile-menu:not(.hidden)) #mobile-sidebar-toggle,
    #mobile-menu:not(.hidden) ~ #sidebar-toggle,
    #mobile-menu:not(.hidden) ~ #mobile-sidebar-toggle {
      display: none !important;
      opacity: 0 !important;
      visibility: hidden !important;
      pointer-events: none !important;
    }
  </style>

  <!-- Sidebar Overlay -->
  <div id="admin-sidebar-overlay" class="fixed bg-black bg-opacity-50 z-10 hidden transition-opacity duration-300 ease-in-out" style="top: 64px; left: 0; right: 0; bottom: 0;"></div>

  <div id="admin-sidebar" class="admin-sidebar">
    <%- include('../admin/partials/sidebar', { path: path || '' }) %>
  </div>

  <div id="admin-content" class="admin-content">
    <%- include('../partials/messages') %>
    <%- body %>
  </div>

  <script>
    // Close dropdowns when clicking outside
    document.addEventListener('click', function(e) {
      const dropdowns = document.querySelectorAll('.dropdown-menu.active');
      dropdowns.forEach(dropdown => {
        const button = dropdown.previousElementSibling;
        if (!dropdown.contains(e.target) && !button.contains(e.target)) {
          dropdown.classList.remove('active');
          const icon = button.querySelector('i.fas');
          if (icon) {
            icon.classList.remove('fa-chevron-up');
            icon.classList.add('fa-chevron-down');
          }
        }
      });
    });

    // Hide sidebar toggle button when mobile menu is open
    function hideSidebarToggleButtons() {
      const mobileMenu = document.getElementById('mobile-menu');
      const sidebarToggle = document.getElementById('sidebar-toggle');
      const mobileSidebarToggle = document.getElementById('mobile-sidebar-toggle');

      if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
        // Mobile menu is open, hide sidebar toggle buttons
        if (sidebarToggle) {
          sidebarToggle.style.display = 'none';
          sidebarToggle.style.opacity = '0';
          sidebarToggle.style.visibility = 'hidden';
        }

        if (mobileSidebarToggle) {
          mobileSidebarToggle.style.display = 'none';
          mobileSidebarToggle.style.opacity = '0';
          mobileSidebarToggle.style.visibility = 'hidden';
        }
      }
    }

    // Call this function periodically to ensure buttons stay hidden
    setInterval(hideSidebarToggleButtons, 500);

    // Sidebar toggle functionality
    document.addEventListener('DOMContentLoaded', function() {
      const sidebarToggle = document.getElementById('sidebar-toggle');
      const sidebar = document.getElementById('admin-sidebar');
      const content = document.getElementById('admin-content');

      // Scroll to active section in sidebar if needed
      const currentPath = window.location.pathname;
      if (currentPath.includes('/admin/template-marketplace')) {
        const templateMarketplaceSection = document.getElementById('template-marketplace-section');
        if (templateMarketplaceSection) {
          setTimeout(() => {
            // Scroll to the section with some offset to show links below it
            const navElement = document.querySelector('.custom-scrollbar');
            if (navElement) {
              const sectionTop = templateMarketplaceSection.offsetTop;
              navElement.scrollTop = sectionTop - 150; // Increased offset to show more links below
              console.log('Scrolled to Template Marketplace section');

              // Make sure the Analytics link is visible by scrolling a bit more after a delay
              setTimeout(() => {
                navElement.scrollTop += 50; // Scroll a bit more to ensure Analytics is visible
                console.log('Adjusted scroll to show Analytics link');
              }, 1000);
            }
          }, 800);
        }
      }

      if (sidebarToggle && sidebar && content) {
        // Get the close button inside the sidebar and the overlay
        const sidebarClose = document.getElementById('admin-sidebar-close');
        const overlay = document.getElementById('admin-sidebar-overlay');

        // Check saved sidebar state
        const sidebarState = localStorage.getItem('adminSidebarState');

        // Initialize sidebar state based on saved preference
        if (sidebarState === 'collapsed') {
          // Collapse sidebar on desktop
          sidebar.classList.add('collapsed');
          content.classList.add('sidebar-collapsed');
          sidebarToggle.classList.add('collapsed');
          sidebarToggle.classList.remove('expanded');

          // Set icon to bars (only on desktop)
          if (window.innerWidth > 768) {
            const barIcon = sidebarToggle.querySelector('.fa-bars');
            const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
            if (barIcon && chevronIcon) {
              barIcon.classList.remove('hidden');
              chevronIcon.classList.add('hidden');
            }
          }
        } else {
          // Expand sidebar on desktop
          sidebar.classList.remove('collapsed');
          content.classList.remove('sidebar-collapsed');
          sidebarToggle.classList.remove('collapsed');
          sidebarToggle.classList.add('expanded');

          // Set icon to chevron-left (only on desktop)
          if (window.innerWidth > 768) {
            const barIcon = sidebarToggle.querySelector('.fa-bars');
            const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
            if (barIcon && chevronIcon) {
              barIcon.classList.add('hidden');
              chevronIcon.classList.remove('hidden');
            }
          }
        }

        // Mobile-specific behavior
        if (window.innerWidth <= 768) {
          // Ensure only hamburger icon is visible on mobile
          const barIcon = sidebarToggle.querySelector('.fa-bars');
          const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
          if (barIcon && chevronIcon) {
            barIcon.classList.remove('hidden');
            chevronIcon.classList.add('hidden');
          }

          // Force correct positioning on mobile
          sidebarToggle.style.position = 'fixed';
          sidebarToggle.style.top = '74px';
          sidebarToggle.style.left = '10px';
          sidebarToggle.style.right = 'auto';
          sidebarToggle.style.marginLeft = '0';
          sidebarToggle.style.marginRight = '0';
          sidebarToggle.style.transform = 'none';

          // Check if we should show the sidebar on mobile
          const showSidebarOnMobile = localStorage.getItem('adminSidebarVisible') === 'true';

          // On mobile, show sidebar if preference is set
          if (showSidebarOnMobile) {
            sidebar.classList.add('active');
            if (overlay) overlay.classList.remove('hidden'); // Show overlay
            // Hide toggle button when sidebar is open
            sidebarToggle.style.display = 'none';
            sidebarToggle.style.opacity = '0';
            sidebarToggle.style.visibility = 'hidden';
          } else {
            sidebar.classList.remove('active');
            if (overlay) overlay.classList.add('hidden'); // Hide overlay
            sidebarToggle.style.display = 'flex'; // Show toggle button when sidebar is closed
            sidebarToggle.style.opacity = '1';
            sidebarToggle.style.visibility = 'visible';
          }
        }

        // Add click event for the close button (mobile only)
        if (sidebarClose) {
          // Hide close button on desktop
          if (window.innerWidth > 768) {
            sidebarClose.style.display = 'none';
          }

          sidebarClose.addEventListener('click', function() {
            // Only handle click on mobile
            if (window.innerWidth <= 768) {
              sidebar.classList.remove('active');
              if (overlay) overlay.classList.add('hidden'); // Hide overlay

              // Show toggle button when sidebar is closed on mobile
              sidebarToggle.style.display = 'flex';
              sidebarToggle.style.opacity = '1';
              sidebarToggle.style.visibility = 'visible';
              sidebarToggle.style.position = 'fixed';
              sidebarToggle.style.top = '74px';
              sidebarToggle.style.left = '10px';
              sidebarToggle.style.right = 'auto';
              sidebarToggle.style.marginLeft = '0';
              sidebarToggle.style.marginRight = '0';
              sidebarToggle.style.transform = 'none';

              localStorage.setItem('adminSidebarVisible', 'false');
            }
          });
        }

        // Add click event for the overlay
        if (overlay) {
          overlay.addEventListener('click', function() {
            sidebar.classList.remove('active');
            overlay.classList.add('hidden'); // Hide overlay

            // Show toggle button when sidebar is closed on mobile
            if (window.innerWidth <= 768) {
              sidebarToggle.style.display = 'flex';
              sidebarToggle.style.opacity = '1';
              sidebarToggle.style.visibility = 'visible';
              sidebarToggle.style.position = 'fixed';
              sidebarToggle.style.top = '74px';
              sidebarToggle.style.left = '10px';
              sidebarToggle.style.right = 'auto';
              sidebarToggle.style.marginLeft = '0';
              sidebarToggle.style.marginRight = '0';
              sidebarToggle.style.transform = 'none';
            }

            localStorage.setItem('adminSidebarVisible', 'false');
          });
        }

        // Toggle sidebar when button is clicked
        sidebarToggle.addEventListener('click', function() {
          // Different behavior for mobile and desktop
          if (window.innerWidth <= 768) {
            // Mobile behavior
            sidebar.classList.toggle('active');
            localStorage.setItem('adminSidebarVisible', sidebar.classList.contains('active'));

            // Show/hide overlay and toggle button
            if (sidebar.classList.contains('active')) {
              // When sidebar is open
              if (overlay) overlay.classList.remove('hidden');
              // Hide toggle button when sidebar is open
              sidebarToggle.style.display = 'none';
              sidebarToggle.style.opacity = '0';
              sidebarToggle.style.visibility = 'hidden';
            } else {
              // When sidebar is closed
              if (overlay) overlay.classList.add('hidden');
              sidebarToggle.style.display = 'flex'; // Show toggle button
              sidebarToggle.style.opacity = '1';
              sidebarToggle.style.visibility = 'visible';
              sidebarToggle.style.position = 'fixed';
              sidebarToggle.style.top = '74px';
              sidebarToggle.style.left = '10px';
              sidebarToggle.style.right = 'auto';
              sidebarToggle.style.marginLeft = '0';
              sidebarToggle.style.marginRight = '0';
              sidebarToggle.style.transform = 'none';
            }
          } else {
            // Desktop behavior - toggle collapsed state
            if (sidebar.classList.contains('collapsed')) {
              // Expand sidebar
              sidebar.classList.remove('collapsed');
              content.classList.remove('sidebar-collapsed');
              sidebarToggle.classList.remove('collapsed');
              sidebarToggle.classList.add('expanded');
              localStorage.setItem('adminSidebarState', 'expanded');

              // Change icon to chevron-left (only on desktop)
              if (window.innerWidth > 768) {
                const barIcon = sidebarToggle.querySelector('.fa-bars');
                const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
                if (barIcon && chevronIcon) {
                  barIcon.classList.add('hidden');
                  chevronIcon.classList.remove('hidden');
                }
              }
            } else {
              // Collapse sidebar
              sidebar.classList.add('collapsed');
              content.classList.add('sidebar-collapsed');
              sidebarToggle.classList.add('collapsed');
              sidebarToggle.classList.remove('expanded');
              localStorage.setItem('adminSidebarState', 'collapsed');

              // Change icon to bars (only on desktop)
              if (window.innerWidth > 768) {
                const barIcon = sidebarToggle.querySelector('.fa-bars');
                const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
                if (barIcon && chevronIcon) {
                  barIcon.classList.remove('hidden');
                  chevronIcon.classList.add('hidden');
                }
              }
            }
          }
        });

        // Hide sidebar when clicking outside on mobile (excluding overlay as it has its own handler)
        document.addEventListener('click', function(e) {
          if (window.innerWidth <= 768 &&
              sidebar.classList.contains('active') &&
              !sidebar.contains(e.target) &&
              !sidebarToggle.contains(e.target) &&
              (!overlay || (overlay && !overlay.contains(e.target)))) {
            sidebar.classList.remove('active');
            if (overlay) overlay.classList.add('hidden'); // Hide overlay

            // Show toggle button when sidebar is closed on mobile
            sidebarToggle.style.display = 'flex';
            sidebarToggle.style.opacity = '1';
            sidebarToggle.style.visibility = 'visible';
            sidebarToggle.style.position = 'fixed';
            sidebarToggle.style.top = '74px';
            sidebarToggle.style.left = '10px';
            sidebarToggle.style.right = 'auto';
            sidebarToggle.style.marginLeft = '0';
            sidebarToggle.style.marginRight = '0';
            sidebarToggle.style.transform = 'none';

            localStorage.setItem('adminSidebarVisible', 'false');
          }
        });

        // Handle window resize
        window.addEventListener('resize', function() {
          // If transitioning from mobile to desktop
          if (window.innerWidth > 768) {
            // Remove mobile-specific classes
            sidebar.classList.remove('active');
            if (overlay) overlay.classList.add('hidden');

            // Hide close button on desktop
            if (sidebarClose) {
              sidebarClose.style.display = 'none';
            }

            // Apply desktop state based on saved preference
            const sidebarState = localStorage.getItem('adminSidebarState');
            if (sidebarState === 'collapsed') {
              sidebar.classList.add('collapsed');
              content.classList.add('sidebar-collapsed');
              sidebarToggle.classList.add('collapsed');
              sidebarToggle.classList.remove('expanded');

              // Set icon to bars (only on desktop)
              if (window.innerWidth > 768) {
                const barIcon = sidebarToggle.querySelector('.fa-bars');
                const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
                if (barIcon && chevronIcon) {
                  barIcon.classList.remove('hidden');
                  chevronIcon.classList.add('hidden');
                }
              }
            } else {
              sidebar.classList.remove('collapsed');
              content.classList.remove('sidebar-collapsed');
              sidebarToggle.classList.remove('collapsed');
              sidebarToggle.classList.add('expanded');

              // Set icon to chevron-left (only on desktop)
              if (window.innerWidth > 768) {
                const barIcon = sidebarToggle.querySelector('.fa-bars');
                const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
                if (barIcon && chevronIcon) {
                  barIcon.classList.add('hidden');
                  chevronIcon.classList.remove('hidden');
                }
              }
            }
          } else {
            // On mobile
            // Ensure only hamburger icon is visible on mobile
            const barIcon = sidebarToggle.querySelector('.fa-bars');
            const chevronIcon = sidebarToggle.querySelector('.fa-chevron-left');
            if (barIcon && chevronIcon) {
              barIcon.classList.remove('hidden');
              chevronIcon.classList.add('hidden');
            }

            // Force correct positioning on mobile
            sidebarToggle.style.position = 'fixed';
            sidebarToggle.style.top = '74px';
            sidebarToggle.style.left = '10px';
            sidebarToggle.style.right = 'auto';
            sidebarToggle.style.marginLeft = '0';
            sidebarToggle.style.marginRight = '0';
            sidebarToggle.style.transform = 'none';

            // Show close button on mobile
            if (sidebarClose) {
              sidebarClose.style.display = 'block';
            }

            // Apply mobile state based on saved preference
            const showSidebarOnMobile = localStorage.getItem('adminSidebarVisible') === 'true';
            if (showSidebarOnMobile) {
              // When sidebar is open
              sidebar.classList.add('active');
              if (overlay) overlay.classList.remove('hidden');
              // Hide toggle button when sidebar is open
              sidebarToggle.style.display = 'none';
              sidebarToggle.style.opacity = '0';
              sidebarToggle.style.visibility = 'hidden';
            } else {
              // When sidebar is closed
              sidebar.classList.remove('active');
              if (overlay) overlay.classList.add('hidden');
              sidebarToggle.style.display = 'flex'; // Show toggle button
              sidebarToggle.style.opacity = '1';
              sidebarToggle.style.visibility = 'visible';
            }
          }
        });
      }
    });
  </script>
</body>
</html>
