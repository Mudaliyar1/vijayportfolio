<!-- Package Details Page -->
<style>
  /* Enhanced celebration animation styles */
  @keyframes success-circle-1 {
    0% { transform: scale(0); opacity: 0; }
    20% { transform: scale(1.5); opacity: 0.7; }
    100% { transform: scale(3.5); opacity: 0; }
  }

  @keyframes success-circle-2 {
    0% { transform: scale(0); opacity: 0; }
    30% { transform: scale(1.7); opacity: 0.7; }
    100% { transform: scale(3.7); opacity: 0; }
  }

  @keyframes success-circle-3 {
    0% { transform: scale(0); opacity: 0; }
    40% { transform: scale(1.9); opacity: 0.7; }
    100% { transform: scale(3.9); opacity: 0; }
  }

  @keyframes success-circle-4 {
    0% { transform: scale(0); opacity: 0; }
    50% { transform: scale(2.1); opacity: 0.7; }
    100% { transform: scale(4.1); opacity: 0; }
  }

  @keyframes pulse-slow {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 0.7; transform: scale(1.05); }
  }

  @keyframes spin-slow {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes success-checkmark-container {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 0; }
    50% { transform: translate(-50%, -50%) scale(1.2); opacity: 1; }
    70% { transform: translate(-50%, -50%) scale(0.9); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
  }

  @keyframes success-text {
    0% { opacity: 0; transform: translateY(10px) scale(0.9); }
    70% { opacity: 0; transform: translateY(10px) scale(0.9); }
    85% { opacity: 1; transform: translateY(-2px) scale(1.05); }
    100% { opacity: 1; transform: translateY(0) scale(1); }
  }

  @keyframes success-text-delay {
    0% { opacity: 0; transform: translateY(10px); }
    80% { opacity: 0; transform: translateY(10px); }
    95% { opacity: 1; transform: translateY(-2px); }
    100% { opacity: 1; transform: translateY(0); }
  }

  @keyframes success-text-wave {
    0% { opacity: 0; transform: translateY(0); }
    80% { opacity: 0; transform: translateY(0); }
    90% { opacity: 1; transform: translateY(-3px); }
    95% { transform: translateY(2px); }
    100% { opacity: 1; transform: translateY(0); }
  }

  @keyframes success-underline {
    0% { opacity: 0; width: 0; }
    85% { opacity: 0; width: 0; }
    100% { opacity: 1; width: 80px; }
  }

  @keyframes checkmark-draw {
    0% { stroke-dashoffset: 100; }
    60% { stroke-dashoffset: 100; }
    85% { stroke-dashoffset: 0; stroke-width: 4; }
    100% { stroke-dashoffset: 0; stroke-width: 3; }
  }

  @keyframes confetti {
    0% { transform: translateY(0) translateX(0) rotate(0deg) scale(0.5); opacity: 0; }
    10% { opacity: 1; transform: translateY(0) translateX(0) rotate(0deg) scale(1); }
    40% { opacity: 1; }
    100% { transform: translateY(-150px) translateX(40px) rotate(720deg) scale(0.7); opacity: 0; }
  }

  @keyframes confetti-delayed {
    0% { transform: translateY(0) translateX(0) rotate(0deg) scale(0.5); opacity: 0; }
    20% { opacity: 0; }
    30% { opacity: 1; transform: translateY(0) translateX(0) rotate(0deg) scale(1); }
    100% { transform: translateY(-170px) translateX(-40px) rotate(-720deg) scale(0.7); opacity: 0; }
  }

  @keyframes confetti-extra-delayed {
    0% { transform: translateY(0) translateX(0) rotate(0deg) scale(0.5); opacity: 0; }
    30% { opacity: 0; }
    40% { opacity: 1; transform: translateY(0) translateX(0) rotate(0deg) scale(1); }
    100% { transform: translateY(-190px) translateX(20px) rotate(1080deg) scale(0.5); opacity: 0; }
  }

  @keyframes confetti-star {
    0% { transform: translateY(0) rotate(0deg) scale(0); opacity: 0; }
    30% { opacity: 0; }
    40% { transform: translateY(10px) rotate(180deg) scale(1.2); opacity: 1; }
    60% { transform: translateY(-50px) rotate(360deg) scale(1); opacity: 1; }
    100% { transform: translateY(-200px) rotate(1080deg) scale(0.5); opacity: 0; }
  }

  @keyframes glitter {
    0% { transform: translateY(0) translateX(0) scale(0); opacity: 0; }
    10% { opacity: 1; transform: scale(1); }
    50% { opacity: 1; }
    100% { transform: translateY(-100px) translateX(50px) scale(0.1); opacity: 0; }
  }

  /* Apply animations */
  .animate-success-circle-1 {
    animation: success-circle-1 2s ease-out forwards;
  }

  .animate-success-circle-2 {
    animation: success-circle-2 2s ease-out 0.15s forwards;
  }

  .animate-success-circle-3 {
    animation: success-circle-3 2s ease-out 0.3s forwards;
  }

  .animate-success-circle-4 {
    animation: success-circle-4 2s ease-out 0.45s forwards;
  }

  .animate-pulse-slow {
    animation: pulse-slow 3s ease-in-out infinite;
  }

  .animate-spin-slow {
    animation: spin-slow 8s linear infinite;
  }

  .animate-success-checkmark-container {
    animation: success-checkmark-container 1s ease-out 0.6s forwards;
  }

  .animate-success-text {
    animation: success-text 1.4s ease-out forwards;
  }

  .animate-success-text-delay {
    animation: success-text-delay 1.7s ease-out forwards;
  }

  .animate-success-text-wave {
    animation: success-text-wave 2s ease-out forwards;
  }

  .animate-success-underline {
    animation: success-underline 2.2s ease-out forwards;
  }

  .checkmark-path {
    stroke-dasharray: 100;
    stroke-dashoffset: 100;
    animation: checkmark-draw 1.2s ease-in-out 1s forwards;
    filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.5));
  }

  @keyframes checkmark-pulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.1); opacity: 0.8; }
    100% { transform: scale(1); opacity: 1; }
  }

  .checkmark-svg {
    animation: checkmark-pulse 2s ease-in-out 2s infinite;
  }

  /* Confetti particles */
  .confetti-container {
    pointer-events: none;
    z-index: 10;
    width: 300px;
    height: 300px;
    transform: translate(-50%, -50%);
    left: 50%;
    top: 50%;
  }

  .confetti-particle {
    position: absolute;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    opacity: 0;
    transform-origin: center center;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
  }

  /* First burst particles */
  .confetti-particle:nth-child(1) {
    top: 40%; left: 40%;
    animation: confetti 1.5s cubic-bezier(0.22, 0.61, 0.36, 1) 0.6s forwards;
  }

  .confetti-particle:nth-child(2) {
    top: 40%; left: 60%;
    animation: confetti 1.7s cubic-bezier(0.22, 0.61, 0.36, 1) 0.7s forwards;
  }

  .confetti-particle:nth-child(3) {
    top: 60%; left: 40%;
    animation: confetti 1.6s cubic-bezier(0.22, 0.61, 0.36, 1) 0.8s forwards;
  }

  .confetti-particle:nth-child(4) {
    top: 60%; left: 60%;
    animation: confetti 1.8s cubic-bezier(0.22, 0.61, 0.36, 1) 0.9s forwards;
  }

  .confetti-particle:nth-child(5) {
    top: 30%; left: 50%;
    animation: confetti 1.5s cubic-bezier(0.22, 0.61, 0.36, 1) 1s forwards;
  }

  .confetti-particle:nth-child(6) {
    top: 70%; left: 50%;
    animation: confetti 1.7s cubic-bezier(0.22, 0.61, 0.36, 1) 1.1s forwards;
  }

  .confetti-particle:nth-child(7) {
    top: 50%; left: 30%;
    animation: confetti 1.6s cubic-bezier(0.22, 0.61, 0.36, 1) 1.2s forwards;
  }

  .confetti-particle:nth-child(8) {
    top: 50%; left: 70%;
    animation: confetti 1.8s cubic-bezier(0.22, 0.61, 0.36, 1) 1.3s forwards;
  }

  /* Delayed confetti particles */
  .confetti-delayed {
    animation-name: confetti-delayed !important;
    animation-duration: 2s !important;
  }

  .confetti-delayed:nth-child(9) {
    top: 35%; left: 35%;
    animation-delay: 1.2s !important;
  }

  .confetti-delayed:nth-child(10) {
    top: 35%; left: 65%;
    animation-delay: 1.3s !important;
  }

  .confetti-delayed:nth-child(11) {
    top: 65%; left: 35%;
    animation-delay: 1.4s !important;
  }

  .confetti-delayed:nth-child(12) {
    top: 65%; left: 65%;
    animation-delay: 1.5s !important;
  }

  .confetti-delayed:nth-child(13) {
    top: 25%; left: 50%;
    animation-delay: 1.6s !important;
  }

  .confetti-delayed:nth-child(14) {
    top: 75%; left: 50%;
    animation-delay: 1.7s !important;
  }

  .confetti-delayed:nth-child(15) {
    top: 50%; left: 25%;
    animation-delay: 1.8s !important;
  }

  .confetti-delayed:nth-child(16) {
    top: 50%; left: 75%;
    animation-delay: 1.9s !important;
  }

  /* Extra delayed confetti */
  .confetti-extra-delayed {
    animation-name: confetti-extra-delayed !important;
    animation-duration: 2.5s !important;
  }

  .confetti-extra-delayed:nth-child(17) {
    top: 45%; left: 45%;
    animation-delay: 1.7s !important;
  }

  .confetti-extra-delayed:nth-child(18) {
    top: 45%; left: 55%;
    animation-delay: 1.8s !important;
  }

  .confetti-extra-delayed:nth-child(19) {
    top: 55%; left: 45%;
    animation-delay: 1.9s !important;
  }

  .confetti-extra-delayed:nth-child(20) {
    top: 55%; left: 55%;
    animation-delay: 2s !important;
  }

  /* Star-shaped confetti */
  .confetti-star {
    position: absolute;
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-bottom: 12px solid currentColor;
    opacity: 0;
    filter: drop-shadow(0 0 3px currentColor);
  }

  .confetti-star:before,
  .confetti-star:after {
    content: '';
    position: absolute;
    background-color: inherit;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
  }

  .confetti-star:before {
    border-bottom: 12px solid;
    top: 4px;
    left: -6px;
    transform: rotate(70deg);
  }

  .confetti-star:after {
    border-bottom: 12px solid;
    top: 4px;
    left: -6px;
    transform: rotate(-70deg);
  }

  .confetti-star:nth-child(21) {
    top: 40%; left: 40%;
    animation: confetti-star 2s cubic-bezier(0.22, 0.61, 0.36, 1) 1.5s forwards;
  }

  .confetti-star:nth-child(22) {
    top: 40%; left: 60%;
    animation: confetti-star 2.2s cubic-bezier(0.22, 0.61, 0.36, 1) 1.7s forwards;
  }

  .confetti-star:nth-child(23) {
    top: 60%; left: 40%;
    animation: confetti-star 2.1s cubic-bezier(0.22, 0.61, 0.36, 1) 1.9s forwards;
  }

  .confetti-star:nth-child(24) {
    top: 60%; left: 60%;
    animation: confetti-star 2.3s cubic-bezier(0.22, 0.61, 0.36, 1) 2.1s forwards;
  }

  .confetti-star:nth-child(25) {
    top: 50%; left: 50%;
    animation: confetti-star 2.4s cubic-bezier(0.22, 0.61, 0.36, 1) 2.3s forwards;
  }

  /* Glitter particles */
  .glitter-particle {
    position: absolute;
    width: 3px;
    height: 3px;
    border-radius: 50%;
    opacity: 0;
    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,0.3) 100%);
    box-shadow: 0 0 5px 2px rgba(255, 255, 255, 0.3);
  }

  .glitter-particle:nth-child(26) {
    top: 30%; left: 30%;
    animation: glitter 1.5s ease-out 1.2s forwards;
  }

  .glitter-particle:nth-child(27) {
    top: 30%; left: 70%;
    animation: glitter 1.3s ease-out 1.3s forwards;
  }

  .glitter-particle:nth-child(28) {
    top: 70%; left: 30%;
    animation: glitter 1.4s ease-out 1.4s forwards;
  }

  .glitter-particle:nth-child(29) {
    top: 70%; left: 70%;
    animation: glitter 1.6s ease-out 1.5s forwards;
  }

  .glitter-particle:nth-child(30) {
    top: 20%; left: 50%;
    animation: glitter 1.2s ease-out 1.6s forwards;
  }

  .glitter-particle:nth-child(31) {
    top: 80%; left: 50%;
    animation: glitter 1.7s ease-out 1.7s forwards;
  }

  .glitter-particle:nth-child(32) {
    top: 50%; left: 20%;
    animation: glitter 1.3s ease-out 1.8s forwards;
  }

  .glitter-particle:nth-child(33) {
    top: 50%; left: 80%;
    animation: glitter 1.5s ease-out 1.9s forwards;
  }
</style>

<div class="max-w-6xl mx-auto px-4 py-8">
  <!-- Breadcrumb -->
  <div class="mb-8">
    <nav class="flex" aria-label="Breadcrumb">
      <ol class="inline-flex items-center space-x-1 md:space-x-3">
        <li class="inline-flex items-center">
          <a href="/" class="text-gray-400 hover:text-white">
            <i class="fas fa-home mr-2"></i> Home
          </a>
        </li>
        <li>
          <div class="flex items-center">
            <i class="fas fa-chevron-right text-gray-500 mx-2"></i>
            <a href="/packages" class="text-gray-400 hover:text-white">Packages</a>
          </div>
        </li>
        <li aria-current="page">
          <div class="flex items-center">
            <i class="fas fa-chevron-right text-gray-500 mx-2"></i>
            <span class="text-gray-300"><%= package.name %></span>
          </div>
        </li>
      </ol>
    </nav>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- Package Details -->
    <div class="lg:col-span-2">
      <div class="bg-dark-100/80 backdrop-blur-sm rounded-lg border <%= package.isFree ? 'border-neon-blue/30' : 'border-neon-green/30' %> overflow-hidden">
        <!-- Package Header -->
        <div class="p-6 <%= package.isFree ? 'bg-neon-blue/10' : 'bg-neon-green/10' %>">
          <h1 class="text-3xl font-bold <%= package.isFree ? 'text-neon-blue' : 'text-neon-green' %>">
            <%= package.name %>
          </h1>
          <div class="flex items-end mt-2">
            <span class="text-4xl font-bold text-white">₹<%= package.price %></span>
            <% if (package.isFree) { %>
              <span class="ml-2 text-sm bg-neon-blue/20 text-neon-blue px-2 py-1 rounded">Free</span>
            <% } %>
          </div>
        </div>

        <!-- Package Description -->
        <div class="p-6">
          <% if (package.description) { %>
            <div class="mb-8">
              <h2 class="text-xl font-bold text-white mb-4">Description</h2>
              <div class="text-gray-300 whitespace-pre-line"><%= package.description %></div>
            </div>
          <% } %>

          <!-- Package Features -->
          <div class="mb-8">
            <h2 class="text-xl font-bold text-white mb-4">Features</h2>
            <ul class="space-y-4">
              <li class="flex items-start">
                <i class="fas fa-check-circle text-<%= package.isFree ? 'neon-blue' : 'neon-green' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white"><%= package.pagesAllowed %> <%= package.pagesAllowed === 1 ? 'Page' : 'Pages' %></h3>
                  <p class="text-gray-400">Your website will include up to <%= package.pagesAllowed %> professionally designed <%= package.pagesAllowed === 1 ? 'page' : 'pages' %>.</p>
                </div>
              </li>

              <li class="flex items-start">
                <i class="fas <%= package.features.aiContent ? 'fa-check-circle text-' + (package.isFree ? 'neon-blue' : 'neon-green') : 'fa-times-circle text-gray-500' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white">AI Content Generation</h3>
                  <p class="text-gray-400"><%= package.features.aiContent ? 'Includes AI-generated content for your website, saving you time and ensuring professional quality.' : 'This feature is not included in this package.' %></p>
                </div>
              </li>

              <li class="flex items-start">
                <i class="fas <%= package.features.seo ? 'fa-check-circle text-' + (package.isFree ? 'neon-blue' : 'neon-green') : 'fa-times-circle text-gray-500' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white">SEO Optimization</h3>
                  <p class="text-gray-400"><%= package.features.seo ? 'Your website will be optimized for search engines to improve visibility and ranking.' : 'This feature is not included in this package.' %></p>
                </div>
              </li>

              <li class="flex items-start">
                <i class="fas <%= package.features.fullAi ? 'fa-check-circle text-' + (package.isFree ? 'neon-blue' : 'neon-green') : 'fa-times-circle text-gray-500' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white">Full AI Integration</h3>
                  <p class="text-gray-400"><%= package.features.fullAi ? 'Advanced AI features integrated into your website, including chatbots and personalized content.' : 'This feature is not included in this package.' %></p>
                </div>
              </li>

              <li class="flex items-start">
                <i class="fas fa-check-circle text-<%= package.isFree ? 'neon-blue' : 'neon-green' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white">Responsive Design</h3>
                  <p class="text-gray-400">Your website will look great on all devices - desktop, tablet, and mobile.</p>
                </div>
              </li>

              <li class="flex items-start">
                <i class="fas fa-check-circle text-<%= package.isFree ? 'neon-blue' : 'neon-green' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white">Hosting Included</h3>
                  <p class="text-gray-400">Your website will be hosted on our reliable servers with 99.9% uptime.</p>
                </div>
              </li>

              <li class="flex items-start">
                <i class="fas fa-check-circle text-<%= package.isFree ? 'neon-blue' : 'neon-green' %> mt-1 mr-3 text-lg"></i>
                <div>
                  <h3 class="font-bold text-white">Technical Support</h3>
                  <p class="text-gray-400">Our team is available to help with any technical issues or questions.</p>
                </div>
              </li>
            </ul>
          </div>


        </div>
      </div>
    </div>

    <!-- Contact Form -->
    <div class="lg:col-span-1">
      <div class="bg-dark-100/80 backdrop-blur-sm rounded-lg border border-neon-purple/30 p-6 sticky top-24">
        <h2 id="inquiry-heading" class="text-xl font-bold text-white mb-4">Interested in this package?</h2>
        <p id="inquiry-description" class="text-gray-300 mb-6">Fill out the form below and we'll get back to you with more information.</p>

        <!-- Success Animation (Hidden by default) -->
        <div id="inquiry-success" class="hidden">
          <div class="flex flex-col items-center justify-center p-6 bg-dark-200/50 rounded-lg border border-gray-700/50 shadow-lg mx-auto max-w-md">
            <!-- Enhanced celebration animation -->
            <div class="success-animation-container relative w-28 h-28 mb-6">
              <!-- Glowing background effect -->
              <div class="absolute inset-0 rounded-full bg-gradient-to-r from-green-500/20 to-blue-500/20 animate-pulse-slow"></div>

              <!-- Multiple expanding circles with gradient colors -->
              <div class="absolute inset-0 rounded-full bg-gradient-to-r from-green-500/10 to-blue-500/10 animate-success-circle-1"></div>
              <div class="absolute inset-0 rounded-full bg-gradient-to-r from-purple-500/10 to-pink-500/10 animate-success-circle-2"></div>
              <div class="absolute inset-0 rounded-full bg-gradient-to-r from-yellow-500/10 to-orange-500/10 animate-success-circle-3"></div>
              <div class="absolute inset-0 rounded-full bg-gradient-to-r from-blue-500/10 to-indigo-500/10 animate-success-circle-4"></div>

              <!-- Rotating ring -->
              <div class="absolute inset-0 rounded-full border-4 border-dashed border-green-400/30 animate-spin-slow"></div>

              <!-- Checkmark container with glow effect -->
              <div class="absolute top-1/2 left-1/2 w-20 h-20 bg-gradient-to-br from-green-500 to-green-600 rounded-full shadow-xl shadow-green-500/40 scale-0 opacity-0 animate-success-checkmark-container" style="box-shadow: 0 0 20px rgba(74, 222, 128, 0.4), inset 0 0 10px rgba(255, 255, 255, 0.2);">
                <!-- Inner glow -->
                <div class="absolute inset-1 rounded-full bg-green-400/30 blur-sm"></div>

                <!-- Perfectly centered checkmark with enhanced drawing animation -->
                <div class="absolute inset-0 flex items-center justify-center">
                  <!-- Subtle glow behind checkmark -->
                  <div class="absolute w-10 h-10 bg-white/10 rounded-full blur-md"></div>

                  <svg class="w-12 h-12 text-white checkmark-svg" viewBox="0 0 36 36">
                    <!-- Glow effect for the checkmark -->
                    <filter id="glow" x="-50%" y="-50%" width="200%" height="200%">
                      <feGaussianBlur stdDeviation="2" result="blur" />
                      <feComposite in="SourceGraphic" in2="blur" operator="over" />
                    </filter>

                    <path class="checkmark-path" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" d="M9 18l6 6L27 12" filter="url(#glow)">
                    </path>
                  </svg>
                </div>
              </div>

              <!-- Enhanced confetti explosion -->
              <div class="confetti-container absolute inset-0 overflow-visible">
                <!-- First burst of confetti (circular) -->
                <div class="confetti-particle bg-blue-500 rounded-full w-3 h-3 shadow-lg shadow-blue-500/30"></div>
                <div class="confetti-particle bg-purple-500 rounded-full w-3 h-3 shadow-lg shadow-purple-500/30"></div>
                <div class="confetti-particle bg-yellow-500 rounded-full w-3 h-3 shadow-lg shadow-yellow-500/30"></div>
                <div class="confetti-particle bg-pink-500 rounded-full w-3 h-3 shadow-lg shadow-pink-500/30"></div>
                <div class="confetti-particle bg-green-500 rounded-full w-3 h-3 shadow-lg shadow-green-500/30"></div>
                <div class="confetti-particle bg-red-500 rounded-full w-3 h-3 shadow-lg shadow-red-500/30"></div>
                <div class="confetti-particle bg-indigo-500 rounded-full w-3 h-3 shadow-lg shadow-indigo-500/30"></div>
                <div class="confetti-particle bg-orange-500 rounded-full w-3 h-3 shadow-lg shadow-orange-500/30"></div>

                <!-- Second burst of confetti (square) -->
                <div class="confetti-particle bg-blue-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-blue-500/30"></div>
                <div class="confetti-particle bg-purple-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-purple-500/30"></div>
                <div class="confetti-particle bg-yellow-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-yellow-500/30"></div>
                <div class="confetti-particle bg-pink-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-pink-500/30"></div>
                <div class="confetti-particle bg-green-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-green-500/30"></div>
                <div class="confetti-particle bg-red-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-red-500/30"></div>
                <div class="confetti-particle bg-indigo-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-indigo-500/30"></div>
                <div class="confetti-particle bg-orange-500 confetti-delayed rotate-45 w-3 h-3 shadow-lg shadow-orange-500/30"></div>

                <!-- Third burst (extra delayed) -->
                <div class="confetti-particle bg-cyan-500 confetti-extra-delayed rounded-full w-2 h-2 shadow-lg shadow-cyan-500/30"></div>
                <div class="confetti-particle bg-emerald-500 confetti-extra-delayed rounded-full w-2 h-2 shadow-lg shadow-emerald-500/30"></div>
                <div class="confetti-particle bg-amber-500 confetti-extra-delayed rounded-full w-2 h-2 shadow-lg shadow-amber-500/30"></div>
                <div class="confetti-particle bg-fuchsia-500 confetti-extra-delayed rounded-full w-2 h-2 shadow-lg shadow-fuchsia-500/30"></div>

                <!-- Star-shaped confetti with glow -->
                <div class="confetti-star bg-yellow-400 shadow-lg shadow-yellow-400/50"></div>
                <div class="confetti-star bg-pink-400 shadow-lg shadow-pink-400/50"></div>
                <div class="confetti-star bg-blue-400 shadow-lg shadow-blue-400/50"></div>
                <div class="confetti-star bg-green-400 shadow-lg shadow-green-400/50"></div>
                <div class="confetti-star bg-purple-400 shadow-lg shadow-purple-400/50"></div>

                <!-- Glitter particles (tiny and fast) -->
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
                <div class="glitter-particle bg-white"></div>
              </div>
            </div>

            <!-- Enhanced success text with animations -->
            <h3 class="text-2xl font-bold bg-gradient-to-r from-green-400 to-blue-500 text-transparent bg-clip-text mb-2 opacity-0 animate-success-text">Thank You!</h3>
            <p class="text-gray-300 text-center mb-5 text-sm max-w-md mx-auto opacity-0 animate-success-text-delay relative">
              <span class="relative inline-block">Your inquiry has been submitted successfully.</span>
              <span class="relative inline-block animate-success-text-wave">We'll contact you soon!</span>
              <span class="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-16 h-0.5 bg-gradient-to-r from-green-400 to-blue-500 opacity-0 animate-success-underline"></span>
            </p>
            <div class="flex flex-col sm:flex-row gap-3 justify-center w-full max-w-xs mx-auto">
              <button id="submit-another-btn" class="flex-1 py-2 px-3 bg-neon-green hover:bg-neon-green/90 hover:translate-y-[-1px] rounded-md text-white text-sm transition-all duration-200 shadow-md hover:shadow-lg shadow-neon-green/20 hover:shadow-neon-green/30 flex items-center justify-center">
                <i class="fas fa-plus mr-1"></i> Submit
              </button>
              <a href="/packages" class="flex-1 py-2 px-3 bg-neon-purple hover:bg-neon-purple/90 hover:translate-y-[-1px] rounded-md text-white text-sm transition-all duration-200 shadow-md hover:shadow-lg shadow-neon-purple/20 hover:shadow-neon-purple/30 flex items-center justify-center">
                <i class="fas fa-arrow-left mr-1"></i> Back
              </a>
            </div>
          </div>
        </div>

        <form id="inquiry-form" action="/packages/inquiry" method="POST" class="space-y-4" data-package-id="<%= package._id %>">
          <input type="hidden" name="packageId" value="<%= package._id %>">

          <div>
            <label for="name" class="block text-gray-300 mb-2">Your Name</label>
            <input type="text" id="name" name="name" required
                  class="w-full px-4 py-2 bg-dark-200 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-neon-purple text-white">
          </div>

          <div>
            <label for="email" class="block text-gray-300 mb-2">Your Email</label>
            <input type="email" id="email" name="email" required
                  class="w-full px-4 py-2 bg-dark-200 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-neon-purple text-white">
          </div>

          <div>
            <label for="phone" class="block text-gray-300 mb-2">Your Phone</label>
            <input type="tel" id="phone" name="phone" required
                  class="w-full px-4 py-2 bg-dark-200 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-neon-purple text-white">
          </div>

          <div>
            <label for="message" class="block text-gray-300 mb-2">Message (Optional)</label>
            <textarea id="message" name="message" rows="4"
                      class="w-full px-4 py-2 bg-dark-200 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-neon-purple text-white"></textarea>
          </div>

          <div>
            <label class="block text-gray-300 mb-2">Your Preferences (Optional)</label>
            <div class="space-y-2">
              <div class="flex items-center">
                <input type="checkbox" id="pref-ai-content" name="preferences" value="ai-content" class="mr-2">
                <label for="pref-ai-content" class="text-gray-300">AI Content Generation</label>
              </div>
              <div class="flex items-center">
                <input type="checkbox" id="pref-seo" name="preferences" value="seo" class="mr-2">
                <label for="pref-seo" class="text-gray-300">SEO Optimization</label>
              </div>
              <div class="flex items-center">
                <input type="checkbox" id="pref-full-ai" name="preferences" value="full-ai" class="mr-2">
                <label for="pref-full-ai" class="text-gray-300">Full AI Integration</label>
              </div>
              <div class="flex items-center">
                <input type="checkbox" id="pref-multiple-pages" name="preferences" value="multiple-pages" class="mr-2">
                <label for="pref-multiple-pages" class="text-gray-300">Multiple Pages</label>
              </div>
            </div>
          </div>

          <div>
            <label for="budget" class="block text-gray-300 mb-2">Your Budget (Optional)</label>
            <div class="mb-2">
              <span id="budget-value" class="text-neon-purple font-bold">₹<%= package.price %></span>
            </div>
            <input type="range" id="budget" name="budget" min="0" max="<%= maxPrice %>" step="<%= Math.min(500, Math.ceil(maxPrice/10)) %>" value="<%= package.price %>"
                  class="w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer">
          </div>

          <button type="submit" class="w-full py-2 px-3 rounded-md bg-neon-purple hover:bg-neon-purple/90 hover:translate-y-[-1px] text-white text-sm transition-all duration-200 shadow-md hover:shadow-lg shadow-neon-purple/20 hover:shadow-neon-purple/30 flex items-center justify-center">
            <i class="fas fa-paper-plane mr-1"></i> Submit Inquiry
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const budgetSlider = document.getElementById('budget');
    const budgetValue = document.getElementById('budget-value');
    const inquiryForm = document.getElementById('inquiry-form');
    const inquirySuccess = document.getElementById('inquiry-success');
    const inquiryHeading = document.getElementById('inquiry-heading');
    const inquiryDescription = document.getElementById('inquiry-description');

    // Function to reset and replay the success animation
    function resetSuccessAnimation() {
      // Get all animated elements
      const animatedElements = inquirySuccess.querySelectorAll(
        '.animate-success-circle-1, .animate-success-circle-2, .animate-success-circle-3, .animate-success-circle-4, ' +
        '.animate-pulse-slow, .animate-spin-slow, ' +
        '.animate-success-checkmark-container, .animate-success-text, .animate-success-text-delay, ' +
        '.animate-success-text-wave, .animate-success-underline, ' +
        '.checkmark-path, .confetti-particle, .confetti-delayed, .confetti-extra-delayed, ' +
        '.confetti-star, .glitter-particle'
      );

      // Reset animations by removing and re-adding the classes
      animatedElements.forEach(element => {
        const classes = Array.from(element.classList).filter(cls => cls.startsWith('animate-'));

        // Add special animation classes
        const specialClasses = [
          'checkmark-path', 'checkmark-svg', 'confetti-particle', 'confetti-delayed', 'confetti-extra-delayed',
          'confetti-star', 'glitter-particle'
        ];

        specialClasses.forEach(cls => {
          if (element.classList.contains(cls)) classes.push(cls);
        });

        // Remove animation classes
        classes.forEach(cls => element.classList.remove(cls));

        // Force reflow to restart animations
        void element.offsetWidth;

        // Re-add animation classes
        classes.forEach(cls => element.classList.add(cls));
      });
    }

    // Verify packageId is properly set on page load
    const packageIdInput = inquiryForm.querySelector('input[name="packageId"]');
    const formPackageId = inquiryForm.getAttribute('data-package-id');

    if (packageIdInput) {
      console.log('Initial packageId value:', packageIdInput.value);
      if (!packageIdInput.value && formPackageId) {
        packageIdInput.value = formPackageId;
        console.log('Fixed missing packageId on page load');
      }
    } else {
      console.error('PackageId input not found on page load');
    }

    // Set initial budget value
    budgetValue.textContent = `₹${budgetSlider.value}`;

    // Update budget value display
    budgetSlider.addEventListener('input', function() {
      budgetValue.textContent = `₹${this.value}`;
    });

    // Handle form submission
    inquiryForm.addEventListener('submit', function(e) {
      // Only intercept if not coming from a flash message redirect
      if (!window.location.search.includes('success=true')) {
        e.preventDefault();

        // Critical check: ensure packageId exists and is valid before any submission
        const packageIdInput = inquiryForm.querySelector('input[name="packageId"]');
        if (!packageIdInput || !packageIdInput.value) {
          console.error('Critical: PackageId input missing or empty before submission');
          // Create or update the packageId input
          const dataPackageId = inquiryForm.getAttribute('data-package-id');
          const validPackageId = dataPackageId || '<%= package._id %>';

          if (packageIdInput) {
            packageIdInput.value = validPackageId;
          } else {
            const newInput = document.createElement('input');
            newInput.type = 'hidden';
            newInput.name = 'packageId';
            newInput.value = validPackageId;
            inquiryForm.appendChild(newInput);
          }
          console.log('Fixed critical packageId issue before submission:', validPackageId);
        }

        // Get form data
        const formData = new FormData(this);

        // Log form data for debugging
        console.log('Submitting form with packageId:', formData.get('packageId'));

        // Make sure packageId is included
        if (!formData.get('packageId')) {
          console.error('PackageId is missing, adding it back');
          formData.set('packageId', '<%= package._id %>');
        }

        // Log all form data for debugging
        for (let pair of formData.entries()) {
          console.log(pair[0] + ': ' + pair[1]);
        }

        // Double-check packageId is included and valid
        const packageIdValue = formData.get('packageId');
        if (!packageIdValue || packageIdValue === 'undefined' || packageIdValue === 'null') {
          console.error('PackageId is missing or invalid, adding it back');
          // Get the package ID from the data attribute
          const dataPackageId = inquiryForm.getAttribute('data-package-id');
          formData.set('packageId', dataPackageId || '<%= package._id %>');
          console.log('Updated packageId to:', formData.get('packageId'));
        }

        // Convert FormData to URLSearchParams for better compatibility
        const formParams = new URLSearchParams();
        for (let pair of formData.entries()) {
          formParams.append(pair[0], pair[1]);
        }

        // Submit form via fetch with URLSearchParams
        fetch('/packages/inquiry', {
          method: 'POST',
          body: formParams,
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept': 'application/json'
          }
        })
        .then(async response => {
          if (response.ok) {
            // Show success animation and hide form elements
            inquiryForm.classList.add('hidden');
            inquiryHeading.classList.add('hidden');
            inquiryDescription.classList.add('hidden');
            inquirySuccess.classList.remove('hidden');

            // Reset and replay the success animation
            resetSuccessAnimation();

            // Scroll to success message
            inquirySuccess.scrollIntoView({ behavior: 'smooth' });

            // Clear form fields
            inquiryForm.reset();

            // Make sure packageId is preserved
            const packageIdInput = inquiryForm.querySelector('input[name="packageId"]');
            const originalPackageId = inquiryForm.getAttribute('data-package-id');

            if (packageIdInput && originalPackageId) {
              packageIdInput.value = originalPackageId;
              console.log('Restored packageId from data attribute:', originalPackageId);
            } else if (packageIdInput) {
              packageIdInput.value = '<%= package._id %>';
              console.log('Restored packageId from template:', packageIdInput.value);
            } else {
              console.error('Could not find packageId input to restore');
            }

            return;
          }

          // Try to get error details
          try {
            const errorData = await response.json();
            console.error('Server returned error:', errorData);
            alert(errorData.message || 'An error occurred. Please try again.');
          } catch (parseError) {
            console.error('Error parsing error response:', parseError);
            // If there's an error, submit the form normally to show flash messages
            // Make sure packageId is set correctly before submitting
            const packageIdInput = inquiryForm.querySelector('input[name="packageId"]');
            if (!packageIdInput.value || packageIdInput.value === 'undefined' || packageIdInput.value === 'null') {
              const dataPackageId = inquiryForm.getAttribute('data-package-id');
              packageIdInput.value = dataPackageId || '<%= package._id %>';
              console.log('Fixed packageId before error submission:', packageIdInput.value);
            }
            inquiryForm.submit();
          }
        })
        .catch(error => {
          console.error('Error submitting form:', error);
          alert('Network error occurred. Please try again.');
          // If there's a network error, submit the form normally
          // Make sure packageId is set correctly before submitting
          const packageIdInput = inquiryForm.querySelector('input[name="packageId"]');
          if (!packageIdInput.value || packageIdInput.value === 'undefined' || packageIdInput.value === 'null') {
            const dataPackageId = inquiryForm.getAttribute('data-package-id');
            packageIdInput.value = dataPackageId || '<%= package._id %>';
            console.log('Fixed packageId before normal submission:', packageIdInput.value);
          }
          inquiryForm.submit();
        });
      }
    });

    // Check for success parameter in URL (for when redirected back after form submission)
    if (window.location.search.includes('success=true')) {
      inquiryForm.classList.add('hidden');
      inquiryHeading.classList.add('hidden');
      inquiryDescription.classList.add('hidden');
      inquirySuccess.classList.remove('hidden');

      // Reset and replay the success animation
      resetSuccessAnimation();
    }

    // Handle "Submit Another Inquiry" button
    document.getElementById('submit-another-btn').addEventListener('click', function() {
      // Hide success message and show form again
      inquirySuccess.classList.add('hidden');
      inquiryForm.classList.remove('hidden');
      inquiryHeading.classList.remove('hidden');
      inquiryDescription.classList.remove('hidden');

      // Clear form fields
      inquiryForm.reset();

      // Make sure packageId is set correctly
      const packageIdInput = inquiryForm.querySelector('input[name="packageId"]');
      const originalPackageId = inquiryForm.getAttribute('data-package-id');
      const packageIdValue = '<%= package._id %>';

      // Ensure we have a valid package ID
      const validPackageId = originalPackageId || packageIdValue;
      console.log('Valid package ID for reset:', validPackageId);

      if (packageIdInput) {
        // Update the existing input
        packageIdInput.value = validPackageId;
        console.log('Reset packageId to:', packageIdInput.value);
      } else {
        // Create a new input if it doesn't exist
        console.error('PackageId input not found, creating it');
        const newPackageIdInput = document.createElement('input');
        newPackageIdInput.type = 'hidden';
        newPackageIdInput.name = 'packageId';
        newPackageIdInput.value = validPackageId;
        inquiryForm.appendChild(newPackageIdInput);
        console.log('Created new packageId input with value:', newPackageIdInput.value);
      }

      // Double-check that the packageId is set correctly
      const checkPackageId = inquiryForm.querySelector('input[name="packageId"]');
      if (!checkPackageId || !checkPackageId.value) {
        console.error('PackageId still missing after reset attempt');
        // Last resort: add it directly to the form
        inquiryForm.innerHTML += `<input type="hidden" name="packageId" value="${validPackageId}">`;
      }

      // Reset budget slider to package price
      const packagePrice = parseInt('<%= package.price %>');
      budgetSlider.value = packagePrice;
      budgetValue.textContent = `₹${packagePrice}`;

      // Update URL to remove success parameter
      const url = new URL(window.location);
      url.searchParams.delete('success');
      window.history.replaceState({}, '', url);
    });
  });
</script>
